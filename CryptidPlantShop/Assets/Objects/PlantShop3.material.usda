#usda 1.0
(
    "Exported from Adobe Substance 3D Painter 9.1.2"
    defaultPrim = "PlantShop_obj"
)

def "PlantShop_obj"
{
    def Scope "material"
    {
        def Material "BellLamSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3.spp@
                    }
                }
            }
        )
        {
            asset inputs:basecolor_tex = @PlantShop3_textures/PlantShop_BellLamSG_BaseMap.1001.png@
            asset inputs:compositedAmbientOcclusion_tex = @PlantShop3_textures/PlantShop_BellLamSG_MaskMap.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3_textures/PlantShop_BellLamSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3_textures/PlantShop_BellLamSG_Emissive.1001.png@
            asset inputs:metallic_tex = @PlantShop3_textures/PlantShop_BellLamSG_MaskMap.1001.png@
            asset inputs:opacity_tex = @PlantShop3_textures/PlantShop_BellLamSG_BaseMap.1001.png@
            token outputs:displacement.connect = </PlantShop_obj/material/BellLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:displacement>
            token outputs:surface.connect = </PlantShop_obj/material/BellLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "ShaderUsdPreviewSurface"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShop_obj/material/BellLamSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissive.connect = </PlantShop_obj/material/BellLamSG/UsdPreviewSurface/emissiveTextureShader.outputs:rgb>
                    float inputs:metallic.connect = </PlantShop_obj/material/BellLamSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShop_obj/material/BellLamSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShop_obj/material/BellLamSG/UsdPreviewSurface/occlusionTextureShader.outputs:g>
                    float inputs:opacity.connect = </PlantShop_obj/material/BellLamSG/UsdPreviewSurface/opacityTextureShader.outputs:a>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/BellLamSG.inputs:basecolor_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/BellLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/BellLamSG.inputs:metallic_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/BellLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/BellLamSG.inputs:emissive_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/BellLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "opacityTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/BellLamSG.inputs:opacity_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/BellLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:a
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/BellLamSG.inputs:compositedAmbientOcclusion_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/BellLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:g
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShop_obj/material/BellLamSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    float2 inputs:st.connect = </PlantShop_obj/material/BellLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }
        }

        def Material "BucketLamSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3.spp@
                    }
                }
            }
        )
        {
            asset inputs:basecolor_tex = @PlantShop3_textures/PlantShop_BucketLamSG_BaseMap.1001.png@
            asset inputs:compositedAmbientOcclusion_tex = @PlantShop3_textures/PlantShop_BucketLamSG_MaskMap.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3_textures/PlantShop_BucketLamSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3_textures/PlantShop_BucketLamSG_Emissive.1001.png@
            asset inputs:metallic_tex = @PlantShop3_textures/PlantShop_BucketLamSG_MaskMap.1001.png@
            asset inputs:opacity_tex = @PlantShop3_textures/PlantShop_BucketLamSG_BaseMap.1001.png@
            token outputs:displacement.connect = </PlantShop_obj/material/BucketLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:displacement>
            token outputs:surface.connect = </PlantShop_obj/material/BucketLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "ShaderUsdPreviewSurface"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShop_obj/material/BucketLamSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissive.connect = </PlantShop_obj/material/BucketLamSG/UsdPreviewSurface/emissiveTextureShader.outputs:rgb>
                    float inputs:metallic.connect = </PlantShop_obj/material/BucketLamSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShop_obj/material/BucketLamSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShop_obj/material/BucketLamSG/UsdPreviewSurface/occlusionTextureShader.outputs:g>
                    float inputs:opacity.connect = </PlantShop_obj/material/BucketLamSG/UsdPreviewSurface/opacityTextureShader.outputs:a>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/BucketLamSG.inputs:basecolor_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/BucketLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/BucketLamSG.inputs:metallic_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/BucketLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/BucketLamSG.inputs:emissive_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/BucketLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "opacityTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/BucketLamSG.inputs:opacity_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/BucketLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:a
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/BucketLamSG.inputs:compositedAmbientOcclusion_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/BucketLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:g
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShop_obj/material/BucketLamSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    float2 inputs:st.connect = </PlantShop_obj/material/BucketLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }
        }

        def Material "CabSinkLamSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3.spp@
                    }
                }
            }
        )
        {
            asset inputs:basecolor_tex = @PlantShop3_textures/PlantShop_CabSinkLamSG_BaseMap.1001.png@
            asset inputs:compositedAmbientOcclusion_tex = @PlantShop3_textures/PlantShop_CabSinkLamSG_MaskMap.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3_textures/PlantShop_CabSinkLamSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3_textures/PlantShop_CabSinkLamSG_Emissive.1001.png@
            asset inputs:metallic_tex = @PlantShop3_textures/PlantShop_CabSinkLamSG_MaskMap.1001.png@
            asset inputs:opacity_tex = @PlantShop3_textures/PlantShop_CabSinkLamSG_BaseMap.1001.png@
            token outputs:displacement.connect = </PlantShop_obj/material/CabSinkLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:displacement>
            token outputs:surface.connect = </PlantShop_obj/material/CabSinkLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "ShaderUsdPreviewSurface"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShop_obj/material/CabSinkLamSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissive.connect = </PlantShop_obj/material/CabSinkLamSG/UsdPreviewSurface/emissiveTextureShader.outputs:rgb>
                    float inputs:metallic.connect = </PlantShop_obj/material/CabSinkLamSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShop_obj/material/CabSinkLamSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShop_obj/material/CabSinkLamSG/UsdPreviewSurface/occlusionTextureShader.outputs:g>
                    float inputs:opacity.connect = </PlantShop_obj/material/CabSinkLamSG/UsdPreviewSurface/opacityTextureShader.outputs:a>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/CabSinkLamSG.inputs:basecolor_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/CabSinkLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/CabSinkLamSG.inputs:metallic_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/CabSinkLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/CabSinkLamSG.inputs:emissive_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/CabSinkLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "opacityTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/CabSinkLamSG.inputs:opacity_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/CabSinkLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:a
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/CabSinkLamSG.inputs:compositedAmbientOcclusion_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/CabSinkLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:g
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShop_obj/material/CabSinkLamSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    float2 inputs:st.connect = </PlantShop_obj/material/CabSinkLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }
        }

        def Material "CabinetLamSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3.spp@
                    }
                }
            }
        )
        {
            asset inputs:basecolor_tex = @PlantShop3_textures/PlantShop_CabinetLamSG_BaseMap.1001.png@
            asset inputs:compositedAmbientOcclusion_tex = @PlantShop3_textures/PlantShop_CabinetLamSG_MaskMap.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3_textures/PlantShop_CabinetLamSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3_textures/PlantShop_CabinetLamSG_Emissive.1001.png@
            asset inputs:metallic_tex = @PlantShop3_textures/PlantShop_CabinetLamSG_MaskMap.1001.png@
            asset inputs:opacity_tex = @PlantShop3_textures/PlantShop_CabinetLamSG_BaseMap.1001.png@
            token outputs:displacement.connect = </PlantShop_obj/material/CabinetLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:displacement>
            token outputs:surface.connect = </PlantShop_obj/material/CabinetLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "ShaderUsdPreviewSurface"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShop_obj/material/CabinetLamSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissive.connect = </PlantShop_obj/material/CabinetLamSG/UsdPreviewSurface/emissiveTextureShader.outputs:rgb>
                    float inputs:metallic.connect = </PlantShop_obj/material/CabinetLamSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShop_obj/material/CabinetLamSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShop_obj/material/CabinetLamSG/UsdPreviewSurface/occlusionTextureShader.outputs:g>
                    float inputs:opacity.connect = </PlantShop_obj/material/CabinetLamSG/UsdPreviewSurface/opacityTextureShader.outputs:a>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/CabinetLamSG.inputs:basecolor_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/CabinetLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/CabinetLamSG.inputs:metallic_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/CabinetLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/CabinetLamSG.inputs:emissive_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/CabinetLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "opacityTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/CabinetLamSG.inputs:opacity_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/CabinetLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:a
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/CabinetLamSG.inputs:compositedAmbientOcclusion_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/CabinetLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:g
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShop_obj/material/CabinetLamSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    float2 inputs:st.connect = </PlantShop_obj/material/CabinetLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }
        }

        def Material "ComputerLamSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3.spp@
                    }
                }
            }
        )
        {
            asset inputs:basecolor_tex = @PlantShop3_textures/PlantShop_ComputerLamSG_BaseMap.1001.png@
            asset inputs:compositedAmbientOcclusion_tex = @PlantShop3_textures/PlantShop_ComputerLamSG_MaskMap.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3_textures/PlantShop_ComputerLamSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3_textures/PlantShop_ComputerLamSG_Emissive.1001.png@
            asset inputs:metallic_tex = @PlantShop3_textures/PlantShop_ComputerLamSG_MaskMap.1001.png@
            asset inputs:opacity_tex = @PlantShop3_textures/PlantShop_ComputerLamSG_BaseMap.1001.png@
            token outputs:displacement.connect = </PlantShop_obj/material/ComputerLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:displacement>
            token outputs:surface.connect = </PlantShop_obj/material/ComputerLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "ShaderUsdPreviewSurface"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShop_obj/material/ComputerLamSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissive.connect = </PlantShop_obj/material/ComputerLamSG/UsdPreviewSurface/emissiveTextureShader.outputs:rgb>
                    float inputs:metallic.connect = </PlantShop_obj/material/ComputerLamSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShop_obj/material/ComputerLamSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShop_obj/material/ComputerLamSG/UsdPreviewSurface/occlusionTextureShader.outputs:g>
                    float inputs:opacity.connect = </PlantShop_obj/material/ComputerLamSG/UsdPreviewSurface/opacityTextureShader.outputs:a>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/ComputerLamSG.inputs:basecolor_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/ComputerLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/ComputerLamSG.inputs:metallic_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/ComputerLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/ComputerLamSG.inputs:emissive_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/ComputerLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "opacityTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/ComputerLamSG.inputs:opacity_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/ComputerLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:a
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/ComputerLamSG.inputs:compositedAmbientOcclusion_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/ComputerLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:g
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShop_obj/material/ComputerLamSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    float2 inputs:st.connect = </PlantShop_obj/material/ComputerLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }
        }

        def Material "DoorLamSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3.spp@
                    }
                }
            }
        )
        {
            asset inputs:basecolor_tex = @PlantShop3_textures/PlantShop_DoorLamSG_BaseMap.1001.png@
            asset inputs:compositedAmbientOcclusion_tex = @PlantShop3_textures/PlantShop_DoorLamSG_MaskMap.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3_textures/PlantShop_DoorLamSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3_textures/PlantShop_DoorLamSG_Emissive.1001.png@
            asset inputs:metallic_tex = @PlantShop3_textures/PlantShop_DoorLamSG_MaskMap.1001.png@
            asset inputs:opacity_tex = @PlantShop3_textures/PlantShop_DoorLamSG_BaseMap.1001.png@
            token outputs:displacement.connect = </PlantShop_obj/material/DoorLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:displacement>
            token outputs:surface.connect = </PlantShop_obj/material/DoorLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "ShaderUsdPreviewSurface"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShop_obj/material/DoorLamSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissive.connect = </PlantShop_obj/material/DoorLamSG/UsdPreviewSurface/emissiveTextureShader.outputs:rgb>
                    float inputs:metallic.connect = </PlantShop_obj/material/DoorLamSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShop_obj/material/DoorLamSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShop_obj/material/DoorLamSG/UsdPreviewSurface/occlusionTextureShader.outputs:g>
                    float inputs:opacity.connect = </PlantShop_obj/material/DoorLamSG/UsdPreviewSurface/opacityTextureShader.outputs:a>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/DoorLamSG.inputs:basecolor_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/DoorLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/DoorLamSG.inputs:metallic_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/DoorLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/DoorLamSG.inputs:emissive_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/DoorLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "opacityTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/DoorLamSG.inputs:opacity_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/DoorLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:a
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/DoorLamSG.inputs:compositedAmbientOcclusion_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/DoorLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:g
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShop_obj/material/DoorLamSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    float2 inputs:st.connect = </PlantShop_obj/material/DoorLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }
        }

        def Material "FrontWallLamSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3.spp@
                    }
                }
            }
        )
        {
            asset inputs:basecolor_tex = @PlantShop3_textures/PlantShop_FrontWallLamSG_BaseMap.1001.png@
            asset inputs:compositedAmbientOcclusion_tex = @PlantShop3_textures/PlantShop_FrontWallLamSG_MaskMap.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3_textures/PlantShop_FrontWallLamSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3_textures/PlantShop_FrontWallLamSG_Emissive.1001.png@
            asset inputs:metallic_tex = @PlantShop3_textures/PlantShop_FrontWallLamSG_MaskMap.1001.png@
            asset inputs:opacity_tex = @PlantShop3_textures/PlantShop_FrontWallLamSG_BaseMap.1001.png@
            token outputs:displacement.connect = </PlantShop_obj/material/FrontWallLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:displacement>
            token outputs:surface.connect = </PlantShop_obj/material/FrontWallLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "ShaderUsdPreviewSurface"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShop_obj/material/FrontWallLamSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissive.connect = </PlantShop_obj/material/FrontWallLamSG/UsdPreviewSurface/emissiveTextureShader.outputs:rgb>
                    float inputs:metallic.connect = </PlantShop_obj/material/FrontWallLamSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShop_obj/material/FrontWallLamSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShop_obj/material/FrontWallLamSG/UsdPreviewSurface/occlusionTextureShader.outputs:g>
                    float inputs:opacity.connect = </PlantShop_obj/material/FrontWallLamSG/UsdPreviewSurface/opacityTextureShader.outputs:a>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/FrontWallLamSG.inputs:basecolor_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/FrontWallLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/FrontWallLamSG.inputs:metallic_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/FrontWallLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/FrontWallLamSG.inputs:emissive_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/FrontWallLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "opacityTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/FrontWallLamSG.inputs:opacity_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/FrontWallLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:a
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/FrontWallLamSG.inputs:compositedAmbientOcclusion_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/FrontWallLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:g
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShop_obj/material/FrontWallLamSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    float2 inputs:st.connect = </PlantShop_obj/material/FrontWallLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }
        }

        def Material "HookLamSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3.spp@
                    }
                }
            }
        )
        {
            asset inputs:basecolor_tex = @PlantShop3_textures/PlantShop_HookLamSG_BaseMap.1001.png@
            asset inputs:compositedAmbientOcclusion_tex = @PlantShop3_textures/PlantShop_HookLamSG_MaskMap.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3_textures/PlantShop_HookLamSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3_textures/PlantShop_HookLamSG_Emissive.1001.png@
            asset inputs:metallic_tex = @PlantShop3_textures/PlantShop_HookLamSG_MaskMap.1001.png@
            asset inputs:opacity_tex = @PlantShop3_textures/PlantShop_HookLamSG_BaseMap.1001.png@
            token outputs:displacement.connect = </PlantShop_obj/material/HookLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:displacement>
            token outputs:surface.connect = </PlantShop_obj/material/HookLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "ShaderUsdPreviewSurface"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShop_obj/material/HookLamSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissive.connect = </PlantShop_obj/material/HookLamSG/UsdPreviewSurface/emissiveTextureShader.outputs:rgb>
                    float inputs:metallic.connect = </PlantShop_obj/material/HookLamSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShop_obj/material/HookLamSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShop_obj/material/HookLamSG/UsdPreviewSurface/occlusionTextureShader.outputs:g>
                    float inputs:opacity.connect = </PlantShop_obj/material/HookLamSG/UsdPreviewSurface/opacityTextureShader.outputs:a>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/HookLamSG.inputs:basecolor_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/HookLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/HookLamSG.inputs:metallic_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/HookLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/HookLamSG.inputs:emissive_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/HookLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "opacityTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/HookLamSG.inputs:opacity_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/HookLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:a
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/HookLamSG.inputs:compositedAmbientOcclusion_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/HookLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:g
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShop_obj/material/HookLamSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    float2 inputs:st.connect = </PlantShop_obj/material/HookLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }
        }

        def Material "KnobLamSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3.spp@
                    }
                }
            }
        )
        {
            asset inputs:basecolor_tex = @PlantShop3_textures/PlantShop_KnobLamSG_BaseMap.1001.png@
            asset inputs:compositedAmbientOcclusion_tex = @PlantShop3_textures/PlantShop_KnobLamSG_MaskMap.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3_textures/PlantShop_KnobLamSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3_textures/PlantShop_KnobLamSG_Emissive.1001.png@
            asset inputs:metallic_tex = @PlantShop3_textures/PlantShop_KnobLamSG_MaskMap.1001.png@
            asset inputs:opacity_tex = @PlantShop3_textures/PlantShop_KnobLamSG_BaseMap.1001.png@
            token outputs:displacement.connect = </PlantShop_obj/material/KnobLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:displacement>
            token outputs:surface.connect = </PlantShop_obj/material/KnobLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "ShaderUsdPreviewSurface"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShop_obj/material/KnobLamSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissive.connect = </PlantShop_obj/material/KnobLamSG/UsdPreviewSurface/emissiveTextureShader.outputs:rgb>
                    float inputs:metallic.connect = </PlantShop_obj/material/KnobLamSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShop_obj/material/KnobLamSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShop_obj/material/KnobLamSG/UsdPreviewSurface/occlusionTextureShader.outputs:g>
                    float inputs:opacity.connect = </PlantShop_obj/material/KnobLamSG/UsdPreviewSurface/opacityTextureShader.outputs:a>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/KnobLamSG.inputs:basecolor_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/KnobLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/KnobLamSG.inputs:metallic_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/KnobLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/KnobLamSG.inputs:emissive_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/KnobLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "opacityTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/KnobLamSG.inputs:opacity_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/KnobLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:a
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/KnobLamSG.inputs:compositedAmbientOcclusion_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/KnobLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:g
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShop_obj/material/KnobLamSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    float2 inputs:st.connect = </PlantShop_obj/material/KnobLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }
        }

        def Material "LightLamSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3.spp@
                    }
                }
            }
        )
        {
            asset inputs:basecolor_tex = @PlantShop3_textures/PlantShop_LightLamSG_BaseMap.1001.png@
            asset inputs:compositedAmbientOcclusion_tex = @PlantShop3_textures/PlantShop_LightLamSG_MaskMap.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3_textures/PlantShop_LightLamSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3_textures/PlantShop_LightLamSG_Emissive.1001.png@
            asset inputs:metallic_tex = @PlantShop3_textures/PlantShop_LightLamSG_MaskMap.1001.png@
            asset inputs:opacity_tex = @PlantShop3_textures/PlantShop_LightLamSG_BaseMap.1001.png@
            token outputs:displacement.connect = </PlantShop_obj/material/LightLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:displacement>
            token outputs:surface.connect = </PlantShop_obj/material/LightLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "ShaderUsdPreviewSurface"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShop_obj/material/LightLamSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissive.connect = </PlantShop_obj/material/LightLamSG/UsdPreviewSurface/emissiveTextureShader.outputs:rgb>
                    float inputs:metallic.connect = </PlantShop_obj/material/LightLamSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShop_obj/material/LightLamSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShop_obj/material/LightLamSG/UsdPreviewSurface/occlusionTextureShader.outputs:g>
                    float inputs:opacity.connect = </PlantShop_obj/material/LightLamSG/UsdPreviewSurface/opacityTextureShader.outputs:a>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/LightLamSG.inputs:basecolor_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/LightLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/LightLamSG.inputs:metallic_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/LightLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/LightLamSG.inputs:emissive_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/LightLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "opacityTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/LightLamSG.inputs:opacity_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/LightLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:a
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/LightLamSG.inputs:compositedAmbientOcclusion_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/LightLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:g
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShop_obj/material/LightLamSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    float2 inputs:st.connect = </PlantShop_obj/material/LightLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }
        }

        def Material "LilTableLamSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3.spp@
                    }
                }
            }
        )
        {
            asset inputs:basecolor_tex = @PlantShop3_textures/PlantShop_LilTableLamSG_BaseMap.1001.png@
            asset inputs:compositedAmbientOcclusion_tex = @PlantShop3_textures/PlantShop_LilTableLamSG_MaskMap.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3_textures/PlantShop_LilTableLamSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3_textures/PlantShop_LilTableLamSG_Emissive.1001.png@
            asset inputs:metallic_tex = @PlantShop3_textures/PlantShop_LilTableLamSG_MaskMap.1001.png@
            asset inputs:opacity_tex = @PlantShop3_textures/PlantShop_LilTableLamSG_BaseMap.1001.png@
            token outputs:displacement.connect = </PlantShop_obj/material/LilTableLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:displacement>
            token outputs:surface.connect = </PlantShop_obj/material/LilTableLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "ShaderUsdPreviewSurface"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShop_obj/material/LilTableLamSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissive.connect = </PlantShop_obj/material/LilTableLamSG/UsdPreviewSurface/emissiveTextureShader.outputs:rgb>
                    float inputs:metallic.connect = </PlantShop_obj/material/LilTableLamSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShop_obj/material/LilTableLamSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShop_obj/material/LilTableLamSG/UsdPreviewSurface/occlusionTextureShader.outputs:g>
                    float inputs:opacity.connect = </PlantShop_obj/material/LilTableLamSG/UsdPreviewSurface/opacityTextureShader.outputs:a>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/LilTableLamSG.inputs:basecolor_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/LilTableLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/LilTableLamSG.inputs:metallic_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/LilTableLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/LilTableLamSG.inputs:emissive_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/LilTableLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "opacityTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/LilTableLamSG.inputs:opacity_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/LilTableLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:a
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/LilTableLamSG.inputs:compositedAmbientOcclusion_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/LilTableLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:g
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShop_obj/material/LilTableLamSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    float2 inputs:st.connect = </PlantShop_obj/material/LilTableLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }
        }

        def Material "MatLamSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3.spp@
                    }
                }
            }
        )
        {
            asset inputs:basecolor_tex = @PlantShop3_textures/PlantShop_MatLamSG_BaseMap.1001.png@
            asset inputs:compositedAmbientOcclusion_tex = @PlantShop3_textures/PlantShop_MatLamSG_MaskMap.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3_textures/PlantShop_MatLamSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3_textures/PlantShop_MatLamSG_Emissive.1001.png@
            asset inputs:metallic_tex = @PlantShop3_textures/PlantShop_MatLamSG_MaskMap.1001.png@
            asset inputs:opacity_tex = @PlantShop3_textures/PlantShop_MatLamSG_BaseMap.1001.png@
            token outputs:displacement.connect = </PlantShop_obj/material/MatLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:displacement>
            token outputs:surface.connect = </PlantShop_obj/material/MatLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "ShaderUsdPreviewSurface"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShop_obj/material/MatLamSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissive.connect = </PlantShop_obj/material/MatLamSG/UsdPreviewSurface/emissiveTextureShader.outputs:rgb>
                    float inputs:metallic.connect = </PlantShop_obj/material/MatLamSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShop_obj/material/MatLamSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShop_obj/material/MatLamSG/UsdPreviewSurface/occlusionTextureShader.outputs:g>
                    float inputs:opacity.connect = </PlantShop_obj/material/MatLamSG/UsdPreviewSurface/opacityTextureShader.outputs:a>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/MatLamSG.inputs:basecolor_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/MatLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/MatLamSG.inputs:metallic_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/MatLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/MatLamSG.inputs:emissive_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/MatLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "opacityTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/MatLamSG.inputs:opacity_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/MatLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:a
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/MatLamSG.inputs:compositedAmbientOcclusion_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/MatLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:g
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShop_obj/material/MatLamSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    float2 inputs:st.connect = </PlantShop_obj/material/MatLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }
        }

        def Material "PotBaseLamSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3.spp@
                    }
                }
            }
        )
        {
            asset inputs:basecolor_tex = @PlantShop3_textures/PlantShop_PotBaseLamSG_BaseMap.1001.png@
            asset inputs:compositedAmbientOcclusion_tex = @PlantShop3_textures/PlantShop_PotBaseLamSG_MaskMap.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3_textures/PlantShop_PotBaseLamSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3_textures/PlantShop_PotBaseLamSG_Emissive.1001.png@
            asset inputs:metallic_tex = @PlantShop3_textures/PlantShop_PotBaseLamSG_MaskMap.1001.png@
            asset inputs:opacity_tex = @PlantShop3_textures/PlantShop_PotBaseLamSG_BaseMap.1001.png@
            token outputs:displacement.connect = </PlantShop_obj/material/PotBaseLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:displacement>
            token outputs:surface.connect = </PlantShop_obj/material/PotBaseLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "ShaderUsdPreviewSurface"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShop_obj/material/PotBaseLamSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissive.connect = </PlantShop_obj/material/PotBaseLamSG/UsdPreviewSurface/emissiveTextureShader.outputs:rgb>
                    float inputs:metallic.connect = </PlantShop_obj/material/PotBaseLamSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShop_obj/material/PotBaseLamSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShop_obj/material/PotBaseLamSG/UsdPreviewSurface/occlusionTextureShader.outputs:g>
                    float inputs:opacity.connect = </PlantShop_obj/material/PotBaseLamSG/UsdPreviewSurface/opacityTextureShader.outputs:a>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/PotBaseLamSG.inputs:basecolor_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/PotBaseLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/PotBaseLamSG.inputs:metallic_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/PotBaseLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/PotBaseLamSG.inputs:emissive_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/PotBaseLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "opacityTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/PotBaseLamSG.inputs:opacity_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/PotBaseLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:a
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/PotBaseLamSG.inputs:compositedAmbientOcclusion_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/PotBaseLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:g
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShop_obj/material/PotBaseLamSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    float2 inputs:st.connect = </PlantShop_obj/material/PotBaseLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }
        }

        def Material "PotLamSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3.spp@
                    }
                }
            }
        )
        {
            asset inputs:basecolor_tex = @PlantShop3_textures/PlantShop_PotLamSG_BaseMap.1001.png@
            asset inputs:compositedAmbientOcclusion_tex = @PlantShop3_textures/PlantShop_PotLamSG_MaskMap.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3_textures/PlantShop_PotLamSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3_textures/PlantShop_PotLamSG_Emissive.1001.png@
            asset inputs:metallic_tex = @PlantShop3_textures/PlantShop_PotLamSG_MaskMap.1001.png@
            asset inputs:opacity_tex = @PlantShop3_textures/PlantShop_PotLamSG_BaseMap.1001.png@
            token outputs:displacement.connect = </PlantShop_obj/material/PotLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:displacement>
            token outputs:surface.connect = </PlantShop_obj/material/PotLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "ShaderUsdPreviewSurface"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShop_obj/material/PotLamSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissive.connect = </PlantShop_obj/material/PotLamSG/UsdPreviewSurface/emissiveTextureShader.outputs:rgb>
                    float inputs:metallic.connect = </PlantShop_obj/material/PotLamSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShop_obj/material/PotLamSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShop_obj/material/PotLamSG/UsdPreviewSurface/occlusionTextureShader.outputs:g>
                    float inputs:opacity.connect = </PlantShop_obj/material/PotLamSG/UsdPreviewSurface/opacityTextureShader.outputs:a>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/PotLamSG.inputs:basecolor_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/PotLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/PotLamSG.inputs:metallic_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/PotLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/PotLamSG.inputs:emissive_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/PotLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "opacityTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/PotLamSG.inputs:opacity_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/PotLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:a
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/PotLamSG.inputs:compositedAmbientOcclusion_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/PotLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:g
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShop_obj/material/PotLamSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    float2 inputs:st.connect = </PlantShop_obj/material/PotLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }
        }

        def Material "RecLamSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3.spp@
                    }
                }
            }
        )
        {
            asset inputs:basecolor_tex = @PlantShop3_textures/PlantShop_RecLamSG_BaseMap.1001.png@
            asset inputs:compositedAmbientOcclusion_tex = @PlantShop3_textures/PlantShop_RecLamSG_MaskMap.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3_textures/PlantShop_RecLamSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3_textures/PlantShop_RecLamSG_Emissive.1001.png@
            asset inputs:metallic_tex = @PlantShop3_textures/PlantShop_RecLamSG_MaskMap.1001.png@
            asset inputs:opacity_tex = @PlantShop3_textures/PlantShop_RecLamSG_BaseMap.1001.png@
            token outputs:displacement.connect = </PlantShop_obj/material/RecLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:displacement>
            token outputs:surface.connect = </PlantShop_obj/material/RecLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "ShaderUsdPreviewSurface"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShop_obj/material/RecLamSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissive.connect = </PlantShop_obj/material/RecLamSG/UsdPreviewSurface/emissiveTextureShader.outputs:rgb>
                    float inputs:metallic.connect = </PlantShop_obj/material/RecLamSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShop_obj/material/RecLamSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShop_obj/material/RecLamSG/UsdPreviewSurface/occlusionTextureShader.outputs:g>
                    float inputs:opacity.connect = </PlantShop_obj/material/RecLamSG/UsdPreviewSurface/opacityTextureShader.outputs:a>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/RecLamSG.inputs:basecolor_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/RecLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/RecLamSG.inputs:metallic_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/RecLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/RecLamSG.inputs:emissive_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/RecLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "opacityTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/RecLamSG.inputs:opacity_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/RecLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:a
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/RecLamSG.inputs:compositedAmbientOcclusion_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/RecLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:g
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShop_obj/material/RecLamSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    float2 inputs:st.connect = </PlantShop_obj/material/RecLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }
        }

        def Material "RecPlayerLamSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3.spp@
                    }
                }
            }
        )
        {
            asset inputs:basecolor_tex = @PlantShop3_textures/PlantShop_RecPlayerLamSG_BaseMap.1001.png@
            asset inputs:compositedAmbientOcclusion_tex = @PlantShop3_textures/PlantShop_RecPlayerLamSG_MaskMap.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3_textures/PlantShop_RecPlayerLamSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3_textures/PlantShop_RecPlayerLamSG_Emissive.1001.png@
            asset inputs:metallic_tex = @PlantShop3_textures/PlantShop_RecPlayerLamSG_MaskMap.1001.png@
            asset inputs:opacity_tex = @PlantShop3_textures/PlantShop_RecPlayerLamSG_BaseMap.1001.png@
            token outputs:displacement.connect = </PlantShop_obj/material/RecPlayerLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:displacement>
            token outputs:surface.connect = </PlantShop_obj/material/RecPlayerLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "ShaderUsdPreviewSurface"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShop_obj/material/RecPlayerLamSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissive.connect = </PlantShop_obj/material/RecPlayerLamSG/UsdPreviewSurface/emissiveTextureShader.outputs:rgb>
                    float inputs:metallic.connect = </PlantShop_obj/material/RecPlayerLamSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShop_obj/material/RecPlayerLamSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShop_obj/material/RecPlayerLamSG/UsdPreviewSurface/occlusionTextureShader.outputs:g>
                    float inputs:opacity.connect = </PlantShop_obj/material/RecPlayerLamSG/UsdPreviewSurface/opacityTextureShader.outputs:a>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/RecPlayerLamSG.inputs:basecolor_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/RecPlayerLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/RecPlayerLamSG.inputs:metallic_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/RecPlayerLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/RecPlayerLamSG.inputs:emissive_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/RecPlayerLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "opacityTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/RecPlayerLamSG.inputs:opacity_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/RecPlayerLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:a
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/RecPlayerLamSG.inputs:compositedAmbientOcclusion_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/RecPlayerLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:g
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShop_obj/material/RecPlayerLamSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    float2 inputs:st.connect = </PlantShop_obj/material/RecPlayerLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }
        }

        def Material "RecRakLamSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3.spp@
                    }
                }
            }
        )
        {
            asset inputs:basecolor_tex = @PlantShop3_textures/PlantShop_RecRakLamSG_BaseMap.1001.png@
            asset inputs:compositedAmbientOcclusion_tex = @PlantShop3_textures/PlantShop_RecRakLamSG_MaskMap.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3_textures/PlantShop_RecRakLamSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3_textures/PlantShop_RecRakLamSG_Emissive.1001.png@
            asset inputs:metallic_tex = @PlantShop3_textures/PlantShop_RecRakLamSG_MaskMap.1001.png@
            asset inputs:opacity_tex = @PlantShop3_textures/PlantShop_RecRakLamSG_BaseMap.1001.png@
            token outputs:displacement.connect = </PlantShop_obj/material/RecRakLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:displacement>
            token outputs:surface.connect = </PlantShop_obj/material/RecRakLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "ShaderUsdPreviewSurface"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShop_obj/material/RecRakLamSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissive.connect = </PlantShop_obj/material/RecRakLamSG/UsdPreviewSurface/emissiveTextureShader.outputs:rgb>
                    float inputs:metallic.connect = </PlantShop_obj/material/RecRakLamSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShop_obj/material/RecRakLamSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShop_obj/material/RecRakLamSG/UsdPreviewSurface/occlusionTextureShader.outputs:g>
                    float inputs:opacity.connect = </PlantShop_obj/material/RecRakLamSG/UsdPreviewSurface/opacityTextureShader.outputs:a>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/RecRakLamSG.inputs:basecolor_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/RecRakLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/RecRakLamSG.inputs:metallic_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/RecRakLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/RecRakLamSG.inputs:emissive_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/RecRakLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "opacityTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/RecRakLamSG.inputs:opacity_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/RecRakLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:a
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/RecRakLamSG.inputs:compositedAmbientOcclusion_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/RecRakLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:g
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShop_obj/material/RecRakLamSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    float2 inputs:st.connect = </PlantShop_obj/material/RecRakLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }
        }

        def Material "ShopBaseLamSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3.spp@
                    }
                }
            }
        )
        {
            asset inputs:basecolor_tex = @PlantShop3_textures/PlantShop_ShopBaseLamSG_BaseMap.1001.png@
            asset inputs:compositedAmbientOcclusion_tex = @PlantShop3_textures/PlantShop_ShopBaseLamSG_MaskMap.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3_textures/PlantShop_ShopBaseLamSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3_textures/PlantShop_ShopBaseLamSG_Emissive.1001.png@
            asset inputs:metallic_tex = @PlantShop3_textures/PlantShop_ShopBaseLamSG_MaskMap.1001.png@
            asset inputs:opacity_tex = @PlantShop3_textures/PlantShop_ShopBaseLamSG_BaseMap.1001.png@
            token outputs:displacement.connect = </PlantShop_obj/material/ShopBaseLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:displacement>
            token outputs:surface.connect = </PlantShop_obj/material/ShopBaseLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "ShaderUsdPreviewSurface"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShop_obj/material/ShopBaseLamSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissive.connect = </PlantShop_obj/material/ShopBaseLamSG/UsdPreviewSurface/emissiveTextureShader.outputs:rgb>
                    float inputs:metallic.connect = </PlantShop_obj/material/ShopBaseLamSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShop_obj/material/ShopBaseLamSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShop_obj/material/ShopBaseLamSG/UsdPreviewSurface/occlusionTextureShader.outputs:g>
                    float inputs:opacity.connect = </PlantShop_obj/material/ShopBaseLamSG/UsdPreviewSurface/opacityTextureShader.outputs:a>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/ShopBaseLamSG.inputs:basecolor_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/ShopBaseLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/ShopBaseLamSG.inputs:metallic_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/ShopBaseLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/ShopBaseLamSG.inputs:emissive_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/ShopBaseLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "opacityTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/ShopBaseLamSG.inputs:opacity_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/ShopBaseLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:a
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/ShopBaseLamSG.inputs:compositedAmbientOcclusion_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/ShopBaseLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:g
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShop_obj/material/ShopBaseLamSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    float2 inputs:st.connect = </PlantShop_obj/material/ShopBaseLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }
        }

        def Material "ShovelLamSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3.spp@
                    }
                }
            }
        )
        {
            asset inputs:basecolor_tex = @PlantShop3_textures/PlantShop_ShovelLamSG_BaseMap.1001.png@
            asset inputs:compositedAmbientOcclusion_tex = @PlantShop3_textures/PlantShop_ShovelLamSG_MaskMap.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3_textures/PlantShop_ShovelLamSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3_textures/PlantShop_ShovelLamSG_Emissive.1001.png@
            asset inputs:metallic_tex = @PlantShop3_textures/PlantShop_ShovelLamSG_MaskMap.1001.png@
            asset inputs:opacity_tex = @PlantShop3_textures/PlantShop_ShovelLamSG_BaseMap.1001.png@
            token outputs:displacement.connect = </PlantShop_obj/material/ShovelLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:displacement>
            token outputs:surface.connect = </PlantShop_obj/material/ShovelLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "ShaderUsdPreviewSurface"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShop_obj/material/ShovelLamSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissive.connect = </PlantShop_obj/material/ShovelLamSG/UsdPreviewSurface/emissiveTextureShader.outputs:rgb>
                    float inputs:metallic.connect = </PlantShop_obj/material/ShovelLamSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShop_obj/material/ShovelLamSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShop_obj/material/ShovelLamSG/UsdPreviewSurface/occlusionTextureShader.outputs:g>
                    float inputs:opacity.connect = </PlantShop_obj/material/ShovelLamSG/UsdPreviewSurface/opacityTextureShader.outputs:a>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/ShovelLamSG.inputs:basecolor_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/ShovelLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/ShovelLamSG.inputs:metallic_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/ShovelLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/ShovelLamSG.inputs:emissive_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/ShovelLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "opacityTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/ShovelLamSG.inputs:opacity_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/ShovelLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:a
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/ShovelLamSG.inputs:compositedAmbientOcclusion_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/ShovelLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:g
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShop_obj/material/ShovelLamSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    float2 inputs:st.connect = </PlantShop_obj/material/ShovelLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }
        }

        def Material "SoilLamSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3.spp@
                    }
                }
            }
        )
        {
            asset inputs:basecolor_tex = @PlantShop3_textures/PlantShop_SoilLamSG_BaseMap.1001.png@
            asset inputs:compositedAmbientOcclusion_tex = @PlantShop3_textures/PlantShop_SoilLamSG_MaskMap.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3_textures/PlantShop_SoilLamSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3_textures/PlantShop_SoilLamSG_Emissive.1001.png@
            asset inputs:metallic_tex = @PlantShop3_textures/PlantShop_SoilLamSG_MaskMap.1001.png@
            asset inputs:opacity_tex = @PlantShop3_textures/PlantShop_SoilLamSG_BaseMap.1001.png@
            token outputs:displacement.connect = </PlantShop_obj/material/SoilLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:displacement>
            token outputs:surface.connect = </PlantShop_obj/material/SoilLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "ShaderUsdPreviewSurface"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShop_obj/material/SoilLamSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissive.connect = </PlantShop_obj/material/SoilLamSG/UsdPreviewSurface/emissiveTextureShader.outputs:rgb>
                    float inputs:metallic.connect = </PlantShop_obj/material/SoilLamSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShop_obj/material/SoilLamSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShop_obj/material/SoilLamSG/UsdPreviewSurface/occlusionTextureShader.outputs:g>
                    float inputs:opacity.connect = </PlantShop_obj/material/SoilLamSG/UsdPreviewSurface/opacityTextureShader.outputs:a>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/SoilLamSG.inputs:basecolor_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/SoilLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/SoilLamSG.inputs:metallic_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/SoilLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/SoilLamSG.inputs:emissive_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/SoilLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "opacityTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/SoilLamSG.inputs:opacity_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/SoilLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:a
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/SoilLamSG.inputs:compositedAmbientOcclusion_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/SoilLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:g
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShop_obj/material/SoilLamSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    float2 inputs:st.connect = </PlantShop_obj/material/SoilLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }
        }

        def Material "StackedTableLamSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3.spp@
                    }
                }
            }
        )
        {
            asset inputs:basecolor_tex = @PlantShop3_textures/PlantShop_StackedTableLamSG_BaseMap.1001.png@
            asset inputs:compositedAmbientOcclusion_tex = @PlantShop3_textures/PlantShop_StackedTableLamSG_MaskMap.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3_textures/PlantShop_StackedTableLamSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3_textures/PlantShop_StackedTableLamSG_Emissive.1001.png@
            asset inputs:metallic_tex = @PlantShop3_textures/PlantShop_StackedTableLamSG_MaskMap.1001.png@
            asset inputs:opacity_tex = @PlantShop3_textures/PlantShop_StackedTableLamSG_BaseMap.1001.png@
            token outputs:displacement.connect = </PlantShop_obj/material/StackedTableLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:displacement>
            token outputs:surface.connect = </PlantShop_obj/material/StackedTableLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "ShaderUsdPreviewSurface"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShop_obj/material/StackedTableLamSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissive.connect = </PlantShop_obj/material/StackedTableLamSG/UsdPreviewSurface/emissiveTextureShader.outputs:rgb>
                    float inputs:metallic.connect = </PlantShop_obj/material/StackedTableLamSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShop_obj/material/StackedTableLamSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShop_obj/material/StackedTableLamSG/UsdPreviewSurface/occlusionTextureShader.outputs:g>
                    float inputs:opacity.connect = </PlantShop_obj/material/StackedTableLamSG/UsdPreviewSurface/opacityTextureShader.outputs:a>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/StackedTableLamSG.inputs:basecolor_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/StackedTableLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/StackedTableLamSG.inputs:metallic_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/StackedTableLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/StackedTableLamSG.inputs:emissive_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/StackedTableLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "opacityTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/StackedTableLamSG.inputs:opacity_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/StackedTableLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:a
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/StackedTableLamSG.inputs:compositedAmbientOcclusion_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/StackedTableLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:g
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShop_obj/material/StackedTableLamSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    float2 inputs:st.connect = </PlantShop_obj/material/StackedTableLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }
        }

        def Material "VaseLamSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3.spp@
                    }
                }
            }
        )
        {
            asset inputs:basecolor_tex = @PlantShop3_textures/PlantShop_VaseLamSG_BaseMap.1001.png@
            asset inputs:compositedAmbientOcclusion_tex = @PlantShop3_textures/PlantShop_VaseLamSG_MaskMap.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3_textures/PlantShop_VaseLamSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3_textures/PlantShop_VaseLamSG_Emissive.1001.png@
            asset inputs:metallic_tex = @PlantShop3_textures/PlantShop_VaseLamSG_MaskMap.1001.png@
            asset inputs:opacity_tex = @PlantShop3_textures/PlantShop_VaseLamSG_BaseMap.1001.png@
            token outputs:displacement.connect = </PlantShop_obj/material/VaseLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:displacement>
            token outputs:surface.connect = </PlantShop_obj/material/VaseLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "ShaderUsdPreviewSurface"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShop_obj/material/VaseLamSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissive.connect = </PlantShop_obj/material/VaseLamSG/UsdPreviewSurface/emissiveTextureShader.outputs:rgb>
                    float inputs:metallic.connect = </PlantShop_obj/material/VaseLamSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShop_obj/material/VaseLamSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShop_obj/material/VaseLamSG/UsdPreviewSurface/occlusionTextureShader.outputs:g>
                    float inputs:opacity.connect = </PlantShop_obj/material/VaseLamSG/UsdPreviewSurface/opacityTextureShader.outputs:a>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/VaseLamSG.inputs:basecolor_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/VaseLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/VaseLamSG.inputs:metallic_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/VaseLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/VaseLamSG.inputs:emissive_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/VaseLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "opacityTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/VaseLamSG.inputs:opacity_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/VaseLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:a
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/VaseLamSG.inputs:compositedAmbientOcclusion_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/VaseLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:g
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShop_obj/material/VaseLamSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    float2 inputs:st.connect = </PlantShop_obj/material/VaseLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }
        }

        def Material "WaterCanLamSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3.spp@
                    }
                }
            }
        )
        {
            asset inputs:basecolor_tex = @PlantShop3_textures/PlantShop_WaterCanLamSG_BaseMap.1001.png@
            asset inputs:compositedAmbientOcclusion_tex = @PlantShop3_textures/PlantShop_WaterCanLamSG_MaskMap.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3_textures/PlantShop_WaterCanLamSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3_textures/PlantShop_WaterCanLamSG_Emissive.1001.png@
            asset inputs:metallic_tex = @PlantShop3_textures/PlantShop_WaterCanLamSG_MaskMap.1001.png@
            asset inputs:opacity_tex = @PlantShop3_textures/PlantShop_WaterCanLamSG_BaseMap.1001.png@
            token outputs:displacement.connect = </PlantShop_obj/material/WaterCanLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:displacement>
            token outputs:surface.connect = </PlantShop_obj/material/WaterCanLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "ShaderUsdPreviewSurface"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShop_obj/material/WaterCanLamSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissive.connect = </PlantShop_obj/material/WaterCanLamSG/UsdPreviewSurface/emissiveTextureShader.outputs:rgb>
                    float inputs:metallic.connect = </PlantShop_obj/material/WaterCanLamSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShop_obj/material/WaterCanLamSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShop_obj/material/WaterCanLamSG/UsdPreviewSurface/occlusionTextureShader.outputs:g>
                    float inputs:opacity.connect = </PlantShop_obj/material/WaterCanLamSG/UsdPreviewSurface/opacityTextureShader.outputs:a>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/WaterCanLamSG.inputs:basecolor_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/WaterCanLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/WaterCanLamSG.inputs:metallic_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/WaterCanLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/WaterCanLamSG.inputs:emissive_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/WaterCanLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "opacityTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/WaterCanLamSG.inputs:opacity_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/WaterCanLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:a
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/WaterCanLamSG.inputs:compositedAmbientOcclusion_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/WaterCanLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:g
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShop_obj/material/WaterCanLamSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    float2 inputs:st.connect = </PlantShop_obj/material/WaterCanLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }
        }

        def Material "WindowDirtLamSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3.spp@
                    }
                }
            }
        )
        {
            asset inputs:basecolor_tex = @PlantShop3_textures/PlantShop_WindowDirtLamSG_BaseMap.1001.png@
            asset inputs:compositedAmbientOcclusion_tex = @PlantShop3_textures/PlantShop_WindowDirtLamSG_MaskMap.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3_textures/PlantShop_WindowDirtLamSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3_textures/PlantShop_WindowDirtLamSG_Emissive.1001.png@
            asset inputs:metallic_tex = @PlantShop3_textures/PlantShop_WindowDirtLamSG_MaskMap.1001.png@
            asset inputs:opacity_tex = @PlantShop3_textures/PlantShop_WindowDirtLamSG_BaseMap.1001.png@
            token outputs:displacement.connect = </PlantShop_obj/material/WindowDirtLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:displacement>
            token outputs:surface.connect = </PlantShop_obj/material/WindowDirtLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "ShaderUsdPreviewSurface"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShop_obj/material/WindowDirtLamSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissive.connect = </PlantShop_obj/material/WindowDirtLamSG/UsdPreviewSurface/emissiveTextureShader.outputs:rgb>
                    float inputs:metallic.connect = </PlantShop_obj/material/WindowDirtLamSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShop_obj/material/WindowDirtLamSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShop_obj/material/WindowDirtLamSG/UsdPreviewSurface/occlusionTextureShader.outputs:g>
                    float inputs:opacity.connect = </PlantShop_obj/material/WindowDirtLamSG/UsdPreviewSurface/opacityTextureShader.outputs:a>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/WindowDirtLamSG.inputs:basecolor_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/WindowDirtLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/WindowDirtLamSG.inputs:metallic_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/WindowDirtLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/WindowDirtLamSG.inputs:emissive_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/WindowDirtLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "opacityTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/WindowDirtLamSG.inputs:opacity_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/WindowDirtLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:a
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/WindowDirtLamSG.inputs:compositedAmbientOcclusion_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/WindowDirtLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:g
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShop_obj/material/WindowDirtLamSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    float2 inputs:st.connect = </PlantShop_obj/material/WindowDirtLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }
        }

        def Material "WindowTableLamSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3.spp@
                    }
                }
            }
        )
        {
            asset inputs:basecolor_tex = @PlantShop3_textures/PlantShop_WindowTableLamSG_BaseMap.1001.png@
            asset inputs:compositedAmbientOcclusion_tex = @PlantShop3_textures/PlantShop_WindowTableLamSG_MaskMap.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3_textures/PlantShop_WindowTableLamSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3_textures/PlantShop_WindowTableLamSG_Emissive.1001.png@
            asset inputs:metallic_tex = @PlantShop3_textures/PlantShop_WindowTableLamSG_MaskMap.1001.png@
            asset inputs:opacity_tex = @PlantShop3_textures/PlantShop_WindowTableLamSG_BaseMap.1001.png@
            token outputs:displacement.connect = </PlantShop_obj/material/WindowTableLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:displacement>
            token outputs:surface.connect = </PlantShop_obj/material/WindowTableLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "ShaderUsdPreviewSurface"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShop_obj/material/WindowTableLamSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissive.connect = </PlantShop_obj/material/WindowTableLamSG/UsdPreviewSurface/emissiveTextureShader.outputs:rgb>
                    float inputs:metallic.connect = </PlantShop_obj/material/WindowTableLamSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShop_obj/material/WindowTableLamSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShop_obj/material/WindowTableLamSG/UsdPreviewSurface/occlusionTextureShader.outputs:g>
                    float inputs:opacity.connect = </PlantShop_obj/material/WindowTableLamSG/UsdPreviewSurface/opacityTextureShader.outputs:a>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/WindowTableLamSG.inputs:basecolor_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/WindowTableLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/WindowTableLamSG.inputs:metallic_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/WindowTableLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/WindowTableLamSG.inputs:emissive_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/WindowTableLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "opacityTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/WindowTableLamSG.inputs:opacity_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/WindowTableLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:a
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/WindowTableLamSG.inputs:compositedAmbientOcclusion_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/WindowTableLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:g
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShop_obj/material/WindowTableLamSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    float2 inputs:st.connect = </PlantShop_obj/material/WindowTableLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }
        }

        def Material "WorkingTableLamSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3.spp@
                    }
                }
            }
        )
        {
            asset inputs:basecolor_tex = @PlantShop3_textures/PlantShop_WorkingTableLamSG_BaseMap.1001.png@
            asset inputs:compositedAmbientOcclusion_tex = @PlantShop3_textures/PlantShop_WorkingTableLamSG_MaskMap.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3_textures/PlantShop_WorkingTableLamSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3_textures/PlantShop_WorkingTableLamSG_Emissive.1001.png@
            asset inputs:metallic_tex = @PlantShop3_textures/PlantShop_WorkingTableLamSG_MaskMap.1001.png@
            asset inputs:opacity_tex = @PlantShop3_textures/PlantShop_WorkingTableLamSG_BaseMap.1001.png@
            token outputs:displacement.connect = </PlantShop_obj/material/WorkingTableLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:displacement>
            token outputs:surface.connect = </PlantShop_obj/material/WorkingTableLamSG/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "ShaderUsdPreviewSurface"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShop_obj/material/WorkingTableLamSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissive.connect = </PlantShop_obj/material/WorkingTableLamSG/UsdPreviewSurface/emissiveTextureShader.outputs:rgb>
                    float inputs:metallic.connect = </PlantShop_obj/material/WorkingTableLamSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShop_obj/material/WorkingTableLamSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShop_obj/material/WorkingTableLamSG/UsdPreviewSurface/occlusionTextureShader.outputs:g>
                    float inputs:opacity.connect = </PlantShop_obj/material/WorkingTableLamSG/UsdPreviewSurface/opacityTextureShader.outputs:a>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/WorkingTableLamSG.inputs:basecolor_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/WorkingTableLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/WorkingTableLamSG.inputs:metallic_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/WorkingTableLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/WorkingTableLamSG.inputs:emissive_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/WorkingTableLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "opacityTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/WorkingTableLamSG.inputs:opacity_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/WorkingTableLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:a
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/WorkingTableLamSG.inputs:compositedAmbientOcclusion_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/WorkingTableLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:g
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShop_obj/material/WorkingTableLamSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    float2 inputs:st.connect = </PlantShop_obj/material/WorkingTableLamSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }
        }

        def Material "BasketLam" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3.spp@
                    }
                }
            }
        )
        {
            asset inputs:basecolor_tex = @PlantShop3_textures/PlantShop_BasketLam_BaseMap.1001.png@
            asset inputs:compositedAmbientOcclusion_tex = @PlantShop3_textures/PlantShop_BasketLam_MaskMap.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3_textures/PlantShop_BasketLam_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3_textures/PlantShop_BasketLam_Emissive.1001.png@
            asset inputs:metallic_tex = @PlantShop3_textures/PlantShop_BasketLam_MaskMap.1001.png@
            asset inputs:opacity_tex = @PlantShop3_textures/PlantShop_BasketLam_BaseMap.1001.png@
            token outputs:displacement.connect = </PlantShop_obj/material/BasketLam/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:displacement>
            token outputs:surface.connect = </PlantShop_obj/material/BasketLam/UsdPreviewSurface/ShaderUsdPreviewSurface.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "ShaderUsdPreviewSurface"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShop_obj/material/BasketLam/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissive.connect = </PlantShop_obj/material/BasketLam/UsdPreviewSurface/emissiveTextureShader.outputs:rgb>
                    float inputs:metallic.connect = </PlantShop_obj/material/BasketLam/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShop_obj/material/BasketLam/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShop_obj/material/BasketLam/UsdPreviewSurface/occlusionTextureShader.outputs:g>
                    float inputs:opacity.connect = </PlantShop_obj/material/BasketLam/UsdPreviewSurface/opacityTextureShader.outputs:a>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/BasketLam.inputs:basecolor_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/BasketLam/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/BasketLam.inputs:metallic_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/BasketLam/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/BasketLam.inputs:emissive_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/BasketLam/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "opacityTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/BasketLam.inputs:opacity_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/BasketLam/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:a
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShop_obj/material/BasketLam.inputs:compositedAmbientOcclusion_tex>
                    float2 inputs:st.connect = </PlantShop_obj/material/BasketLam/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:g
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShop_obj/material/BasketLam.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    float2 inputs:st.connect = </PlantShop_obj/material/BasketLam/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }
        }
    }

    over "ShopBase_Shop"
    {
        over "ShopBase_Shop" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/ShopBaseLamSG>
        }
    }

    over "Shop_FrontWall"
    {
        over "Shop_FrontWall" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/FrontWallLamSG>
        }
    }

    over "Shop_FrontWall_WindowDirt"
    {
        over "Shop_FrontWall_WindowDirt" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/WindowDirtLamSG>
        }
    }

    over "Shop_FrontWall_Door"
    {
        over "Shop_FrontWall_Door" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/DoorLamSG>
        }
    }

    over "Shop_FrontWall_Door_Knob9"
    {
        over "Shop_FrontWall_Door_Knob9" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/KnobLamSG>
        }
    }

    over "Shop_FrontWall_Door_Knob10"
    {
        over "Shop_FrontWall_Door_Knob10" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/KnobLamSG>
        }
    }

    over "Shop_Cabinet"
    {
        over "Shop_Cabinet" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/CabinetLamSG>
        }
    }

    over "Shop_Cabinet_Knob13"
    {
        over "Shop_Cabinet_Knob13" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/KnobLamSG>
        }
    }

    over "Shop_Cabinet_Knob14"
    {
        over "Shop_Cabinet_Knob14" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/KnobLamSG>
        }
    }

    over "Shop_Cabinet_Knob15"
    {
        over "Shop_Cabinet_Knob15" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/KnobLamSG>
        }
    }

    over "Shop_CabinetAndSink"
    {
        over "Shop_CabinetAndSink" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/CabSinkLamSG>
        }
    }

    over "Shop_CabinetAndSink_Knob11"
    {
        over "Shop_CabinetAndSink_Knob11" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/KnobLamSG>
        }
    }

    over "Shop_CabinetAndSink_Knob12"
    {
        over "Shop_CabinetAndSink_Knob12" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/KnobLamSG>
        }
    }

    over "Shop_Table1"
    {
        over "Shop_Table1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/StackedTableLamSG>
        }
    }

    over "Shop_Table1_Table6"
    {
        over "Shop_Table1_Table6" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/StackedTableLamSG>
        }
    }

    over "Shop_Table1_Table6_Table7"
    {
        over "Shop_Table1_Table6_Table7" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/StackedTableLamSG>
        }
    }

    over "Shop_Light1"
    {
        over "Shop_Light1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/LightLamSG>
        }
    }

    over "Shop_Light3"
    {
        over "Shop_Light3" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/LightLamSG>
        }
    }

    over "Shop_Light4"
    {
        over "Shop_Light4" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/LightLamSG>
        }
    }

    over "Shop_Basket"
    {
        over "Shop_Basket" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/BasketLam>
        }
    }

    over "Shop_Bell"
    {
        over "Shop_Bell" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/BellLamSG>
        }
    }

    over "Shop_RecordPlayer"
    {
        over "Shop_RecordPlayer" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/RecPlayerLamSG>
        }
    }

    over "Shop_RecordPlayer_Lid"
    {
        over "Shop_RecordPlayer_Lid" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/RecPlayerLamSG>
        }
    }

    over "Shop_Record"
    {
        over "Shop_Record" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/RecLamSG>
        }
    }

    over "Shop_Record4"
    {
        over "Shop_Record4" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/RecLamSG>
        }
    }

    over "Shop_Record3"
    {
        over "Shop_Record3" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/RecLamSG>
        }
    }

    over "Shop_Hook1"
    {
        over "Shop_Hook1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/HookLamSG>
        }
    }

    over "Shop_Hook5"
    {
        over "Shop_Hook5" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/HookLamSG>
        }
    }

    over "Shop_RecordRack"
    {
        over "Shop_RecordRack" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/RecRakLamSG>
        }
    }

    over "Shop_Hook6"
    {
        over "Shop_Hook6" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/HookLamSG>
        }
    }

    over "Shop_Hook7"
    {
        over "Shop_Hook7" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/HookLamSG>
        }
    }

    over "Shop_Hook8"
    {
        over "Shop_Hook8" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/HookLamSG>
        }
    }

    over "Shop_Table"
    {
        over "Shop_Table" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/LilTableLamSG>
        }
    }

    over "Shop_Table4"
    {
        over "Shop_Table4" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/WindowTableLamSG>
        }
    }

    over "Shop_Table5"
    {
        over "Shop_Table5" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/WorkingTableLamSG>
        }
    }

    over "Shop_Mat"
    {
        over "Shop_Mat" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/MatLamSG>
        }
    }

    over "Shop_Shovel"
    {
        over "Shop_Shovel" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/ShovelLamSG>
        }
    }

    over "Shop_Computer"
    {
        over "Shop_Computer" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/ComputerLamSG>
        }
    }

    over "Shop_PotBase_PlantPots"
    {
        over "Shop_PotBase_PlantPots" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotBaseLamSG>
        }
    }

    over "Shop_PlantPots_PotBase2"
    {
        over "Shop_PlantPots_PotBase2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotBaseLamSG>
        }
    }

    over "Shop_PlantPots_PotBase3"
    {
        over "Shop_PlantPots_PotBase3" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotBaseLamSG>
        }
    }

    over "Shop_PlantPots_PotBase4"
    {
        over "Shop_PlantPots_PotBase4" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotBaseLamSG>
        }
    }

    over "Shop_PlantPots_PotBase5"
    {
        over "Shop_PlantPots_PotBase5" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotBaseLamSG>
        }
    }

    over "Shop_PlantPots_PotBase6"
    {
        over "Shop_PlantPots_PotBase6" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotBaseLamSG>
        }
    }

    over "Shop_PlantPots_PotBase7"
    {
        over "Shop_PlantPots_PotBase7" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotBaseLamSG>
        }
    }

    over "Shop_PlantPots_Vase"
    {
        over "Shop_PlantPots_Vase" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/VaseLamSG>
        }
    }

    over "Shop_PlantPots_Bucket1"
    {
        over "Shop_PlantPots_Bucket1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/BucketLamSG>
        }
    }

    over "Shop_PlantPots_WateringCan3"
    {
        over "Shop_PlantPots_WateringCan3" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/WaterCanLamSG>
        }
    }

    over "Shop_PlantPots_WateringCan4"
    {
        over "Shop_PlantPots_WateringCan4" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/WaterCanLamSG>
        }
    }

    over "Shop_PlantPots_Vase2"
    {
        over "Shop_PlantPots_Vase2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/VaseLamSG>
        }
    }

    over "Shop_PlantPots_Pot30"
    {
        over "Shop_PlantPots_Pot30" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotLamSG>
        }
    }

    over "Shop_PlantPots_Pot30_Soil"
    {
        over "Shop_PlantPots_Pot30_Soil" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/SoilLamSG>
        }
    }

    over "Shop_PlantPots_Pot30_PotBase"
    {
        over "Shop_PlantPots_Pot30_PotBase" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotBaseLamSG>
        }
    }

    over "Shop_PlantPots_Pot31"
    {
        over "Shop_PlantPots_Pot31" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotLamSG>
        }
    }

    over "Shop_PlantPots_Pot31_Soil"
    {
        over "Shop_PlantPots_Pot31_Soil" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/SoilLamSG>
        }
    }

    over "Shop_PlantPots_Pot31_PotBase"
    {
        over "Shop_PlantPots_Pot31_PotBase" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotBaseLamSG>
        }
    }

    over "Shop_PlantPots_Pot32"
    {
        over "Shop_PlantPots_Pot32" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotLamSG>
        }
    }

    over "Shop_PlantPots_Pot32_Soil"
    {
        over "Shop_PlantPots_Pot32_Soil" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/SoilLamSG>
        }
    }

    over "Shop_PlantPots_Pot32_PotBase"
    {
        over "Shop_PlantPots_Pot32_PotBase" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotBaseLamSG>
        }
    }

    over "Shop_PlantPots_Pot33"
    {
        over "Shop_PlantPots_Pot33" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotLamSG>
        }
    }

    over "Shop_PlantPots_Pot34"
    {
        over "Shop_PlantPots_Pot34" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotLamSG>
        }
    }

    over "Shop_PlantPots_Pot35"
    {
        over "Shop_PlantPots_Pot35" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotLamSG>
        }
    }

    over "Shop_PlantPots_Pot36"
    {
        over "Shop_PlantPots_Pot36" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotLamSG>
        }
    }

    over "Shop_PlantPots_Pot37"
    {
        over "Shop_PlantPots_Pot37" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotLamSG>
        }
    }

    over "Shop_PlantPots_Pot38"
    {
        over "Shop_PlantPots_Pot38" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotLamSG>
        }
    }

    over "Shop_PlantPots_Pot39"
    {
        over "Shop_PlantPots_Pot39" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotLamSG>
        }
    }

    over "Shop_PlantPots_Pot39_Soil"
    {
        over "Shop_PlantPots_Pot39_Soil" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/SoilLamSG>
        }
    }

    over "Shop_PlantPots_Pot40"
    {
        over "Shop_PlantPots_Pot40" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotLamSG>
        }
    }

    over "Shop_PlantPots_Pot40_Soil"
    {
        over "Shop_PlantPots_Pot40_Soil" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/SoilLamSG>
        }
    }

    over "Shop_PlantPots_Pot41"
    {
        over "Shop_PlantPots_Pot41" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotLamSG>
        }
    }

    over "Shop_PlantPots_Pot41_Soil"
    {
        over "Shop_PlantPots_Pot41_Soil" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/SoilLamSG>
        }
    }

    over "Shop_PlantPots_Pot42"
    {
        over "Shop_PlantPots_Pot42" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotLamSG>
        }
    }

    over "Shop_PlantPots_Pot43"
    {
        over "Shop_PlantPots_Pot43" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotLamSG>
        }
    }

    over "Shop_PlantPots_Pot44"
    {
        over "Shop_PlantPots_Pot44" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotLamSG>
        }
    }

    over "Shop_PlantPots_Pot45"
    {
        over "Shop_PlantPots_Pot45" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotLamSG>
        }
    }

    over "Shop_PlantPots_Pot45_Soil"
    {
        over "Shop_PlantPots_Pot45_Soil" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/SoilLamSG>
        }
    }

    over "Shop_PlantPots_Pot45_PotBase"
    {
        over "Shop_PlantPots_Pot45_PotBase" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotBaseLamSG>
        }
    }

    over "Shop_PlantPots_Pot46"
    {
        over "Shop_PlantPots_Pot46" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotLamSG>
        }
    }

    over "Shop_PlantPots_Pot46_Soil"
    {
        over "Shop_PlantPots_Pot46_Soil" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/SoilLamSG>
        }
    }

    over "Shop_PlantPots_Pot46_PotBase"
    {
        over "Shop_PlantPots_Pot46_PotBase" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotBaseLamSG>
        }
    }

    over "Shop_PlantPots_Pot47"
    {
        over "Shop_PlantPots_Pot47" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotLamSG>
        }
    }

    over "Shop_PlantPots_Pot47_Soil"
    {
        over "Shop_PlantPots_Pot47_Soil" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/SoilLamSG>
        }
    }

    over "Shop_PlantPots_Pot47_PotBase"
    {
        over "Shop_PlantPots_Pot47_PotBase" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotBaseLamSG>
        }
    }

    over "Shop_PlantPots_Pot48"
    {
        over "Shop_PlantPots_Pot48" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotLamSG>
        }
    }

    over "Shop_PlantPots_Pot48_Soil"
    {
        over "Shop_PlantPots_Pot48_Soil" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/SoilLamSG>
        }
    }

    over "Shop_PlantPots_Pot48_PotBase"
    {
        over "Shop_PlantPots_Pot48_PotBase" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotBaseLamSG>
        }
    }

    over "Shop_PlantPots_Pot49"
    {
        over "Shop_PlantPots_Pot49" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotLamSG>
        }
    }

    over "Shop_PlantPots_Pot49_Soil"
    {
        over "Shop_PlantPots_Pot49_Soil" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/SoilLamSG>
        }
    }

    over "Shop_PlantPots_Pot49_PotBase"
    {
        over "Shop_PlantPots_Pot49_PotBase" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotBaseLamSG>
        }
    }

    over "Shop_PlantPots_Pot51"
    {
        over "Shop_PlantPots_Pot51" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotLamSG>
        }
    }

    over "Shop_PlantPots_Pot51_Soil"
    {
        over "Shop_PlantPots_Pot51_Soil" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/SoilLamSG>
        }
    }

    over "Shop_PlantPots_Pot51_PotBase"
    {
        over "Shop_PlantPots_Pot51_PotBase" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotBaseLamSG>
        }
    }

    over "Shop_PlantPots_Pot52"
    {
        over "Shop_PlantPots_Pot52" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotLamSG>
        }
    }

    over "Shop_PlantPots_Pot52_Soil"
    {
        over "Shop_PlantPots_Pot52_Soil" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/SoilLamSG>
        }
    }

    over "Shop_PlantPots_Pot52_PotBase"
    {
        over "Shop_PlantPots_Pot52_PotBase" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotBaseLamSG>
        }
    }

    over "Shop_PlantPots_Pot53"
    {
        over "Shop_PlantPots_Pot53" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotLamSG>
        }
    }

    over "Shop_PlantPots_Pot53_Soil"
    {
        over "Shop_PlantPots_Pot53_Soil" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/SoilLamSG>
        }
    }

    over "Shop_PlantPots_Pot53_PotBase"
    {
        over "Shop_PlantPots_Pot53_PotBase" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotBaseLamSG>
        }
    }

    over "Shop_PlantPots_Pot54"
    {
        over "Shop_PlantPots_Pot54" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotLamSG>
        }
    }

    over "Shop_PlantPots_Pot54_Soil"
    {
        over "Shop_PlantPots_Pot54_Soil" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/SoilLamSG>
        }
    }

    over "Shop_PlantPots_Pot54_PotBase"
    {
        over "Shop_PlantPots_Pot54_PotBase" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotBaseLamSG>
        }
    }

    over "Shop_PlantPots_Pot55"
    {
        over "Shop_PlantPots_Pot55" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotLamSG>
        }
    }

    over "Shop_PlantPots_Pot55_Soil"
    {
        over "Shop_PlantPots_Pot55_Soil" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/SoilLamSG>
        }
    }

    over "Shop_PlantPots_Pot55_PotBase"
    {
        over "Shop_PlantPots_Pot55_PotBase" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotBaseLamSG>
        }
    }

    over "Shop_PlantPots_Pot56"
    {
        over "Shop_PlantPots_Pot56" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotLamSG>
        }
    }

    over "Shop_PlantPots_Pot56_Soil"
    {
        over "Shop_PlantPots_Pot56_Soil" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/SoilLamSG>
        }
    }

    over "Shop_PlantPots_Pot56_PotBase"
    {
        over "Shop_PlantPots_Pot56_PotBase" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotBaseLamSG>
        }
    }

    over "Shop_PlantPots_Pot57"
    {
        over "Shop_PlantPots_Pot57" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotLamSG>
        }
    }

    over "Shop_PlantPots_Pot57_Soil"
    {
        over "Shop_PlantPots_Pot57_Soil" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/SoilLamSG>
        }
    }

    over "Shop_PlantPots_Pot57_PotBase"
    {
        over "Shop_PlantPots_Pot57_PotBase" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotBaseLamSG>
        }
    }

    over "Shop_PlantPots_Pot58"
    {
        over "Shop_PlantPots_Pot58" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotLamSG>
        }
    }

    over "Shop_PlantPots_Pot58_Soil"
    {
        over "Shop_PlantPots_Pot58_Soil" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/SoilLamSG>
        }
    }

    over "Shop_PlantPots_Pot58_PotBase"
    {
        over "Shop_PlantPots_Pot58_PotBase" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotBaseLamSG>
        }
    }

    over "Shop_PlantPots_Pot59"
    {
        over "Shop_PlantPots_Pot59" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotLamSG>
        }
    }

    over "Shop_PlantPots_Pot59_PotBase"
    {
        over "Shop_PlantPots_Pot59_PotBase" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/PotBaseLamSG>
        }
    }

    over "Shop_WateringCan"
    {
        over "Shop_WateringCan" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/WaterCanLamSG>
        }
    }

    over "Shop_Bucket2"
    {
        over "Shop_Bucket2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShop_obj/material/BucketLamSG>
        }
    }
}


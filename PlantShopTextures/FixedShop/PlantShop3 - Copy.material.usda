#usda 1.0
(
    "Exported from Adobe Substance 3D Painter 10.1.1"
    defaultPrim = "PlantShopFix_obj"
)

def "PlantShopFix_obj"
{
    def Scope "material"
    {
        def Material "BasketShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_BasketShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_BasketShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_BasketShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_BasketShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_BasketShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_BasketShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_BasketShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/BasketShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/BasketShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/BasketShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/BasketShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/BasketShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/BasketShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/BasketShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/BasketShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/BasketShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BasketShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BasketShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BasketShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BasketShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BasketShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BasketShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BasketShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BasketShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BasketShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BasketShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/BasketShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BasketShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/BasketShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/BasketShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/BasketShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/BasketShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/BasketShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/BasketShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BasketShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BasketShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BasketShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BasketShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BasketShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BasketShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/BasketShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BasketShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BasketShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BasketShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BasketShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BasketShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "BellShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_BellShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_BellShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_BellShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_BellShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_BellShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_BellShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_BellShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/BellShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/BellShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/BellShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/BellShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/BellShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/BellShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/BellShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/BellShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/BellShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BellShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BellShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BellShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BellShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BellShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BellShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BellShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BellShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BellShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BellShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/BellShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BellShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/BellShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/BellShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/BellShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/BellShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/BellShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/BellShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BellShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BellShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BellShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BellShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BellShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BellShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/BellShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BellShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BellShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BellShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BellShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BellShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "BottleShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_BottleShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_BottleShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_BottleShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_BottleShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_BottleShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_BottleShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_BottleShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/BottleShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/BottleShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/BottleShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/BottleShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/BottleShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/BottleShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/BottleShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/BottleShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/BottleShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BottleShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BottleShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BottleShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BottleShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BottleShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BottleShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BottleShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BottleShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BottleShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BottleShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/BottleShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BottleShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/BottleShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/BottleShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/BottleShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/BottleShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/BottleShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/BottleShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BottleShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BottleShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BottleShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BottleShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BottleShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BottleShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/BottleShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BottleShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BottleShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BottleShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BottleShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BottleShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "BucketShader1SG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_BucketShader1SG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_BucketShader1SG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_BucketShader1SG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_BucketShader1SG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_BucketShader1SG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_BucketShader1SG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_BucketShader1SG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/BucketShader1SG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/BucketShader1SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/BucketShader1SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/BucketShader1SG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/BucketShader1SG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/BucketShader1SG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/BucketShader1SG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/BucketShader1SG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/BucketShader1SG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BucketShader1SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BucketShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BucketShader1SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BucketShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BucketShader1SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BucketShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BucketShader1SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BucketShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BucketShader1SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BucketShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/BucketShader1SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BucketShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/BucketShader1SG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/BucketShader1SG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/BucketShader1SG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/BucketShader1SG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/BucketShader1SG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/BucketShader1SG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BucketShader1SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BucketShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BucketShader1SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BucketShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BucketShader1SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BucketShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/BucketShader1SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BucketShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BucketShader1SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BucketShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BucketShader1SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BucketShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "BucketShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_BucketShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_BucketShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_BucketShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_BucketShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_BucketShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_BucketShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_BucketShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/BucketShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/BucketShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/BucketShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/BucketShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/BucketShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/BucketShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/BucketShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/BucketShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/BucketShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BucketShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BucketShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BucketShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BucketShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BucketShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BucketShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BucketShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BucketShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BucketShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BucketShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/BucketShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BucketShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/BucketShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/BucketShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/BucketShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/BucketShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/BucketShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/BucketShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BucketShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BucketShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BucketShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BucketShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BucketShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BucketShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/BucketShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BucketShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BucketShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BucketShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/BucketShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/BucketShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "CabinetShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_CabinetShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_CabinetShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_CabinetShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_CabinetShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_CabinetShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_CabinetShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_CabinetShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/CabinetShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/CabinetShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/CabinetShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/CabinetShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/CabinetShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/CabinetShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/CabinetShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/CabinetShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/CabinetShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CabinetShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CabinetShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CabinetShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CabinetShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CabinetShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CabinetShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CabinetShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CabinetShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CabinetShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CabinetShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/CabinetShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CabinetShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/CabinetShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/CabinetShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/CabinetShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/CabinetShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/CabinetShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/CabinetShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CabinetShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CabinetShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CabinetShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CabinetShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CabinetShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CabinetShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/CabinetShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CabinetShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CabinetShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CabinetShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CabinetShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CabinetShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "ComputerShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_ComputerShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_ComputerShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_ComputerShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_ComputerShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_ComputerShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_ComputerShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_ComputerShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/ComputerShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/ComputerShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/ComputerShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/ComputerShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/ComputerShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/ComputerShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/ComputerShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/ComputerShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/ComputerShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/ComputerShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/ComputerShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/ComputerShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/ComputerShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/ComputerShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/ComputerShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/ComputerShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/ComputerShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/ComputerShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/ComputerShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/ComputerShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/ComputerShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/ComputerShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/ComputerShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/ComputerShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/ComputerShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/ComputerShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/ComputerShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/ComputerShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/ComputerShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/ComputerShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/ComputerShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/ComputerShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/ComputerShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/ComputerShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/ComputerShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/ComputerShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/ComputerShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/ComputerShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/ComputerShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "CounterTableShader1SG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_CounterTableShader1SG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_CounterTableShader1SG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_CounterTableShader1SG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_CounterTableShader1SG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_CounterTableShader1SG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_CounterTableShader1SG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_CounterTableShader1SG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/CounterTableShader1SG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/CounterTableShader1SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/CounterTableShader1SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/CounterTableShader1SG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/CounterTableShader1SG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/CounterTableShader1SG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/CounterTableShader1SG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/CounterTableShader1SG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/CounterTableShader1SG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CounterTableShader1SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CounterTableShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CounterTableShader1SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CounterTableShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CounterTableShader1SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CounterTableShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CounterTableShader1SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CounterTableShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CounterTableShader1SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CounterTableShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/CounterTableShader1SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CounterTableShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/CounterTableShader1SG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/CounterTableShader1SG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/CounterTableShader1SG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/CounterTableShader1SG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/CounterTableShader1SG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/CounterTableShader1SG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CounterTableShader1SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CounterTableShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CounterTableShader1SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CounterTableShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CounterTableShader1SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CounterTableShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/CounterTableShader1SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CounterTableShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CounterTableShader1SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CounterTableShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CounterTableShader1SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CounterTableShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "CounterTableShader2SG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_CounterTableShader2SG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_CounterTableShader2SG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_CounterTableShader2SG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_CounterTableShader2SG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_CounterTableShader2SG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_CounterTableShader2SG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_CounterTableShader2SG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/CounterTableShader2SG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/CounterTableShader2SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/CounterTableShader2SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/CounterTableShader2SG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/CounterTableShader2SG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/CounterTableShader2SG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/CounterTableShader2SG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/CounterTableShader2SG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/CounterTableShader2SG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CounterTableShader2SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CounterTableShader2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CounterTableShader2SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CounterTableShader2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CounterTableShader2SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CounterTableShader2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CounterTableShader2SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CounterTableShader2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CounterTableShader2SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CounterTableShader2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/CounterTableShader2SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CounterTableShader2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/CounterTableShader2SG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/CounterTableShader2SG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/CounterTableShader2SG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/CounterTableShader2SG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/CounterTableShader2SG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/CounterTableShader2SG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CounterTableShader2SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CounterTableShader2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CounterTableShader2SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CounterTableShader2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CounterTableShader2SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CounterTableShader2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/CounterTableShader2SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CounterTableShader2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CounterTableShader2SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CounterTableShader2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CounterTableShader2SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CounterTableShader2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "CounterTableShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_CounterTableShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_CounterTableShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_CounterTableShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_CounterTableShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_CounterTableShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_CounterTableShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_CounterTableShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/CounterTableShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/CounterTableShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/CounterTableShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/CounterTableShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/CounterTableShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/CounterTableShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/CounterTableShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/CounterTableShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/CounterTableShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CounterTableShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CounterTableShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CounterTableShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CounterTableShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CounterTableShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CounterTableShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CounterTableShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CounterTableShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CounterTableShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CounterTableShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/CounterTableShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CounterTableShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/CounterTableShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/CounterTableShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/CounterTableShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/CounterTableShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/CounterTableShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/CounterTableShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CounterTableShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CounterTableShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CounterTableShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CounterTableShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CounterTableShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CounterTableShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/CounterTableShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CounterTableShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CounterTableShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CounterTableShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CounterTableShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CounterTableShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "CupShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_CupShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_CupShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_CupShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_CupShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_CupShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_CupShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_CupShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/CupShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/CupShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/CupShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/CupShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/CupShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/CupShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/CupShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/CupShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/CupShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CupShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CupShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CupShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CupShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CupShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CupShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CupShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CupShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CupShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CupShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/CupShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CupShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/CupShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/CupShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/CupShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/CupShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/CupShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/CupShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CupShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CupShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CupShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CupShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CupShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CupShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/CupShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CupShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CupShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CupShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/CupShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/CupShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "DecorTableShader1SG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_DecorTableShader1SG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_DecorTableShader1SG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_DecorTableShader1SG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_DecorTableShader1SG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_DecorTableShader1SG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_DecorTableShader1SG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_DecorTableShader1SG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/DecorTableShader1SG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/DecorTableShader1SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/DecorTableShader1SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/DecorTableShader1SG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/DecorTableShader1SG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/DecorTableShader1SG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/DecorTableShader1SG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/DecorTableShader1SG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/DecorTableShader1SG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DecorTableShader1SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DecorTableShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DecorTableShader1SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DecorTableShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DecorTableShader1SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DecorTableShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DecorTableShader1SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DecorTableShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DecorTableShader1SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DecorTableShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/DecorTableShader1SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DecorTableShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/DecorTableShader1SG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/DecorTableShader1SG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/DecorTableShader1SG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/DecorTableShader1SG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/DecorTableShader1SG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/DecorTableShader1SG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DecorTableShader1SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DecorTableShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DecorTableShader1SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DecorTableShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DecorTableShader1SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DecorTableShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/DecorTableShader1SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DecorTableShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DecorTableShader1SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DecorTableShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DecorTableShader1SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DecorTableShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "DecorTableShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_DecorTableShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_DecorTableShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_DecorTableShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_DecorTableShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_DecorTableShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_DecorTableShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_DecorTableShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/DecorTableShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/DecorTableShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/DecorTableShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/DecorTableShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/DecorTableShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/DecorTableShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/DecorTableShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/DecorTableShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/DecorTableShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DecorTableShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DecorTableShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DecorTableShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DecorTableShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DecorTableShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DecorTableShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DecorTableShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DecorTableShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DecorTableShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DecorTableShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/DecorTableShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DecorTableShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/DecorTableShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/DecorTableShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/DecorTableShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/DecorTableShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/DecorTableShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/DecorTableShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DecorTableShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DecorTableShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DecorTableShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DecorTableShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DecorTableShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DecorTableShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/DecorTableShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DecorTableShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DecorTableShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DecorTableShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DecorTableShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DecorTableShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "DirtShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_DirtShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_DirtShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_DirtShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_DirtShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_DirtShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_DirtShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_DirtShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/DirtShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/DirtShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/DirtShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/DirtShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/DirtShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/DirtShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/DirtShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/DirtShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/DirtShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DirtShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DirtShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DirtShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DirtShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DirtShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DirtShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DirtShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DirtShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DirtShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DirtShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/DirtShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DirtShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/DirtShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/DirtShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/DirtShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/DirtShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/DirtShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/DirtShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DirtShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DirtShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DirtShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DirtShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DirtShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DirtShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/DirtShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DirtShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DirtShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DirtShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DirtShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DirtShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "DoorShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_DoorShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_DoorShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_DoorShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_DoorShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_DoorShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_DoorShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_DoorShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/DoorShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/DoorShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/DoorShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/DoorShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/DoorShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/DoorShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/DoorShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/DoorShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/DoorShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DoorShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DoorShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DoorShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DoorShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DoorShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DoorShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DoorShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DoorShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DoorShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DoorShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/DoorShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DoorShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/DoorShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/DoorShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/DoorShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/DoorShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/DoorShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/DoorShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DoorShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DoorShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DoorShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DoorShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DoorShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DoorShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/DoorShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DoorShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DoorShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DoorShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/DoorShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/DoorShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "FertShader1SG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_FertShader1SG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_FertShader1SG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_FertShader1SG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_FertShader1SG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_FertShader1SG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_FertShader1SG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_FertShader1SG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/FertShader1SG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/FertShader1SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/FertShader1SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/FertShader1SG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/FertShader1SG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/FertShader1SG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/FertShader1SG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/FertShader1SG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/FertShader1SG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShader1SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShader1SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShader1SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShader1SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShader1SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShader1SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/FertShader1SG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/FertShader1SG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/FertShader1SG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/FertShader1SG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/FertShader1SG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/FertShader1SG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShader1SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShader1SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShader1SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShader1SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShader1SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShader1SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "FertShader2SG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_FertShader2SG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_FertShader2SG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_FertShader2SG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_FertShader2SG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_FertShader2SG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_FertShader2SG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_FertShader2SG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/FertShader2SG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/FertShader2SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/FertShader2SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/FertShader2SG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/FertShader2SG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/FertShader2SG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/FertShader2SG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/FertShader2SG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/FertShader2SG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShader2SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShader2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShader2SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShader2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShader2SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShader2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShader2SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShader2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShader2SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShader2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShader2SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShader2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/FertShader2SG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/FertShader2SG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/FertShader2SG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/FertShader2SG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/FertShader2SG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/FertShader2SG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShader2SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShader2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShader2SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShader2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShader2SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShader2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShader2SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShader2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShader2SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShader2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShader2SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShader2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "FertShader3SG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_FertShader3SG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_FertShader3SG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_FertShader3SG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_FertShader3SG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_FertShader3SG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_FertShader3SG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_FertShader3SG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/FertShader3SG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/FertShader3SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/FertShader3SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/FertShader3SG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/FertShader3SG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/FertShader3SG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/FertShader3SG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/FertShader3SG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/FertShader3SG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShader3SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShader3SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShader3SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShader3SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShader3SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShader3SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShader3SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShader3SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShader3SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShader3SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShader3SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShader3SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/FertShader3SG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/FertShader3SG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/FertShader3SG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/FertShader3SG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/FertShader3SG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/FertShader3SG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShader3SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShader3SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShader3SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShader3SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShader3SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShader3SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShader3SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShader3SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShader3SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShader3SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShader3SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShader3SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "FertShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_FertShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_FertShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_FertShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_FertShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_FertShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_FertShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_FertShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/FertShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/FertShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/FertShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/FertShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/FertShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/FertShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/FertShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/FertShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/FertShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/FertShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/FertShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/FertShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/FertShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/FertShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/FertShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FertShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FertShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "FrontShopBaseShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_FrontShopBaseShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_FrontShopBaseShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_FrontShopBaseShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_FrontShopBaseShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_FrontShopBaseShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_FrontShopBaseShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_FrontShopBaseShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FrontShopBaseShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "FrontTableShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_FrontTableShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_FrontTableShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_FrontTableShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_FrontTableShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_FrontTableShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_FrontTableShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_FrontTableShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/FrontTableShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/FrontTableShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/FrontTableShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/FrontTableShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/FrontTableShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/FrontTableShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/FrontTableShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/FrontTableShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/FrontTableShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FrontTableShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FrontTableShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FrontTableShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FrontTableShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FrontTableShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FrontTableShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FrontTableShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FrontTableShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FrontTableShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FrontTableShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/FrontTableShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FrontTableShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/FrontTableShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/FrontTableShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/FrontTableShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/FrontTableShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/FrontTableShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/FrontTableShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FrontTableShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FrontTableShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FrontTableShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FrontTableShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FrontTableShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FrontTableShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/FrontTableShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FrontTableShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FrontTableShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FrontTableShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/FrontTableShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/FrontTableShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "GrowLightShader1SG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_GrowLightShader1SG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_GrowLightShader1SG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_GrowLightShader1SG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_GrowLightShader1SG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_GrowLightShader1SG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_GrowLightShader1SG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_GrowLightShader1SG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/GrowLightShader1SG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/GrowLightShader1SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/GrowLightShader1SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/GrowLightShader1SG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/GrowLightShader1SG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/GrowLightShader1SG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/GrowLightShader1SG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/GrowLightShader1SG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/GrowLightShader1SG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/GrowLightShader1SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/GrowLightShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/GrowLightShader1SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/GrowLightShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/GrowLightShader1SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/GrowLightShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/GrowLightShader1SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/GrowLightShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/GrowLightShader1SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/GrowLightShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/GrowLightShader1SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/GrowLightShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/GrowLightShader1SG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/GrowLightShader1SG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/GrowLightShader1SG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/GrowLightShader1SG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/GrowLightShader1SG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/GrowLightShader1SG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/GrowLightShader1SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/GrowLightShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/GrowLightShader1SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/GrowLightShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/GrowLightShader1SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/GrowLightShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/GrowLightShader1SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/GrowLightShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/GrowLightShader1SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/GrowLightShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/GrowLightShader1SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/GrowLightShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "GrowLightShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_GrowLightShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_GrowLightShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_GrowLightShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_GrowLightShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_GrowLightShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_GrowLightShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_GrowLightShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/GrowLightShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/GrowLightShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/GrowLightShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/GrowLightShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/GrowLightShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/GrowLightShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/GrowLightShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/GrowLightShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/GrowLightShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/GrowLightShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/GrowLightShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/GrowLightShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/GrowLightShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/GrowLightShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/GrowLightShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/GrowLightShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/GrowLightShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/GrowLightShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/GrowLightShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/GrowLightShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/GrowLightShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/GrowLightShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/GrowLightShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/GrowLightShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/GrowLightShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/GrowLightShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/GrowLightShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/GrowLightShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/GrowLightShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/GrowLightShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/GrowLightShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/GrowLightShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/GrowLightShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/GrowLightShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/GrowLightShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/GrowLightShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/GrowLightShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/GrowLightShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/GrowLightShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "GrowShelfShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_GrowShelfShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_GrowShelfShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_GrowShelfShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_GrowShelfShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_GrowShelfShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_GrowShelfShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_GrowShelfShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/GrowShelfShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/GrowShelfShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/GrowShelfShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/GrowShelfShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/GrowShelfShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/GrowShelfShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/GrowShelfShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/GrowShelfShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/GrowShelfShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/GrowShelfShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/GrowShelfShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/GrowShelfShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/GrowShelfShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/GrowShelfShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/GrowShelfShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/GrowShelfShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/GrowShelfShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/GrowShelfShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/GrowShelfShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/GrowShelfShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/GrowShelfShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/GrowShelfShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/GrowShelfShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/GrowShelfShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/GrowShelfShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/GrowShelfShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/GrowShelfShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/GrowShelfShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/GrowShelfShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/GrowShelfShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/GrowShelfShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/GrowShelfShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/GrowShelfShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/GrowShelfShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/GrowShelfShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/GrowShelfShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/GrowShelfShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/GrowShelfShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/GrowShelfShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "HookShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_HookShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_HookShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_HookShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_HookShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_HookShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_HookShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_HookShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/HookShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/HookShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/HookShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/HookShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/HookShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/HookShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/HookShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/HookShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/HookShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/HookShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/HookShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/HookShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/HookShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/HookShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/HookShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/HookShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/HookShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/HookShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/HookShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/HookShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/HookShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/HookShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/HookShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/HookShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/HookShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/HookShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/HookShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/HookShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/HookShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/HookShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/HookShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/HookShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/HookShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/HookShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/HookShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/HookShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/HookShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/HookShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/HookShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "KnobShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_KnobShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_KnobShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_KnobShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_KnobShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_KnobShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_KnobShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_KnobShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/KnobShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/KnobShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/KnobShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/KnobShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/KnobShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/KnobShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/KnobShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/KnobShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/KnobShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/KnobShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/KnobShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/KnobShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/KnobShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/KnobShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/KnobShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/KnobShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/KnobShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/KnobShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/KnobShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/KnobShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/KnobShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/KnobShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/KnobShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/KnobShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/KnobShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/KnobShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/KnobShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/KnobShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/KnobShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/KnobShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/KnobShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/KnobShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/KnobShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/KnobShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/KnobShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/KnobShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/KnobShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/KnobShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/KnobShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "LampBulbShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_LampBulbShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_LampBulbShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_LampBulbShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_LampBulbShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_LampBulbShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_LampBulbShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_LampBulbShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/LampBulbShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/LampBulbShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/LampBulbShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/LampBulbShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/LampBulbShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/LampBulbShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/LampBulbShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/LampBulbShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/LampBulbShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/LampBulbShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/LampBulbShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/LampBulbShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/LampBulbShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/LampBulbShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/LampBulbShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/LampBulbShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/LampBulbShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/LampBulbShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/LampBulbShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/LampBulbShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/LampBulbShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/LampBulbShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/LampBulbShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/LampBulbShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/LampBulbShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/LampBulbShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/LampBulbShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/LampBulbShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/LampBulbShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/LampBulbShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/LampBulbShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/LampBulbShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/LampBulbShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/LampBulbShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/LampBulbShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/LampBulbShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/LampBulbShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/LampBulbShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/LampBulbShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "LampShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_LampShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_LampShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_LampShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_LampShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_LampShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_LampShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_LampShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/LampShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/LampShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/LampShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/LampShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/LampShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/LampShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/LampShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/LampShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/LampShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/LampShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/LampShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/LampShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/LampShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/LampShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/LampShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/LampShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/LampShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/LampShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/LampShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/LampShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/LampShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/LampShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/LampShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/LampShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/LampShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/LampShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/LampShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/LampShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/LampShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/LampShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/LampShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/LampShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/LampShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/LampShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/LampShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/LampShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/LampShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/LampShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/LampShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "MatShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_MatShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_MatShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_MatShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_MatShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_MatShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_MatShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_MatShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/MatShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/MatShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/MatShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/MatShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/MatShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/MatShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/MatShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/MatShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/MatShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/MatShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/MatShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/MatShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/MatShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/MatShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/MatShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/MatShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/MatShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/MatShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/MatShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/MatShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/MatShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/MatShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/MatShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/MatShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/MatShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/MatShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/MatShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/MatShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/MatShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/MatShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/MatShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/MatShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/MatShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/MatShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/MatShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/MatShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/MatShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/MatShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/MatShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "NetShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_NetShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_NetShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_NetShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_NetShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_NetShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_NetShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_NetShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/NetShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/NetShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/NetShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/NetShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/NetShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/NetShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/NetShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/NetShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/NetShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/NetShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/NetShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/NetShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/NetShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/NetShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/NetShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/NetShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/NetShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/NetShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/NetShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/NetShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/NetShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/NetShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/NetShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/NetShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/NetShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/NetShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/NetShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/NetShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/NetShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/NetShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/NetShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/NetShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/NetShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/NetShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/NetShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/NetShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/NetShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/NetShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/NetShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "PlaterShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_PlaterShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_PlaterShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_PlaterShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_PlaterShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_PlaterShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_PlaterShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_PlaterShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/PlaterShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/PlaterShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/PlaterShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/PlaterShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/PlaterShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/PlaterShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/PlaterShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/PlaterShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/PlaterShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PlaterShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PlaterShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PlaterShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PlaterShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PlaterShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PlaterShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PlaterShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PlaterShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PlaterShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PlaterShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/PlaterShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PlaterShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/PlaterShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/PlaterShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/PlaterShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/PlaterShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/PlaterShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/PlaterShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PlaterShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PlaterShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PlaterShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PlaterShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PlaterShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PlaterShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/PlaterShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PlaterShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PlaterShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PlaterShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PlaterShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PlaterShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "PlayerLidShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_PlayerLidShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_PlayerLidShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_PlayerLidShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_PlayerLidShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_PlayerLidShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_PlayerLidShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_PlayerLidShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/PlayerLidShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/PlayerLidShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/PlayerLidShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/PlayerLidShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/PlayerLidShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/PlayerLidShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/PlayerLidShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/PlayerLidShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/PlayerLidShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PlayerLidShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PlayerLidShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PlayerLidShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PlayerLidShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PlayerLidShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PlayerLidShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PlayerLidShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PlayerLidShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PlayerLidShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PlayerLidShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/PlayerLidShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PlayerLidShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/PlayerLidShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/PlayerLidShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/PlayerLidShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/PlayerLidShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/PlayerLidShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/PlayerLidShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PlayerLidShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PlayerLidShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PlayerLidShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PlayerLidShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PlayerLidShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PlayerLidShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/PlayerLidShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PlayerLidShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PlayerLidShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PlayerLidShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PlayerLidShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PlayerLidShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "PlayerShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_PlayerShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_PlayerShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_PlayerShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_PlayerShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_PlayerShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_PlayerShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_PlayerShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/PlayerShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/PlayerShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/PlayerShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/PlayerShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/PlayerShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/PlayerShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/PlayerShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/PlayerShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/PlayerShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PlayerShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PlayerShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PlayerShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PlayerShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PlayerShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PlayerShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PlayerShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PlayerShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PlayerShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PlayerShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/PlayerShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PlayerShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/PlayerShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/PlayerShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/PlayerShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/PlayerShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/PlayerShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/PlayerShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PlayerShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PlayerShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PlayerShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PlayerShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PlayerShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PlayerShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/PlayerShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PlayerShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PlayerShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PlayerShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PlayerShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PlayerShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "PotBaseShader1SG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotBaseShader1SG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotBaseShader1SG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotBaseShader1SG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotBaseShader1SG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotBaseShader1SG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotBaseShader1SG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotBaseShader1SG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/PotBaseShader1SG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/PotBaseShader1SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/PotBaseShader1SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/PotBaseShader1SG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/PotBaseShader1SG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/PotBaseShader1SG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/PotBaseShader1SG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/PotBaseShader1SG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/PotBaseShader1SG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotBaseShader1SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotBaseShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotBaseShader1SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotBaseShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotBaseShader1SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotBaseShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotBaseShader1SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotBaseShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotBaseShader1SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotBaseShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotBaseShader1SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotBaseShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/PotBaseShader1SG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/PotBaseShader1SG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/PotBaseShader1SG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/PotBaseShader1SG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/PotBaseShader1SG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/PotBaseShader1SG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotBaseShader1SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotBaseShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotBaseShader1SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotBaseShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotBaseShader1SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotBaseShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotBaseShader1SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotBaseShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotBaseShader1SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotBaseShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotBaseShader1SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotBaseShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "PotBaseShader2SG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotBaseShader2SG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotBaseShader2SG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotBaseShader2SG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotBaseShader2SG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotBaseShader2SG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotBaseShader2SG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotBaseShader2SG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/PotBaseShader2SG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/PotBaseShader2SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/PotBaseShader2SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/PotBaseShader2SG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/PotBaseShader2SG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/PotBaseShader2SG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/PotBaseShader2SG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/PotBaseShader2SG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/PotBaseShader2SG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotBaseShader2SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotBaseShader2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotBaseShader2SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotBaseShader2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotBaseShader2SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotBaseShader2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotBaseShader2SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotBaseShader2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotBaseShader2SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotBaseShader2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotBaseShader2SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotBaseShader2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/PotBaseShader2SG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/PotBaseShader2SG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/PotBaseShader2SG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/PotBaseShader2SG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/PotBaseShader2SG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/PotBaseShader2SG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotBaseShader2SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotBaseShader2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotBaseShader2SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotBaseShader2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotBaseShader2SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotBaseShader2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotBaseShader2SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotBaseShader2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotBaseShader2SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotBaseShader2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotBaseShader2SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotBaseShader2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "PotBaseShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotBaseShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotBaseShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotBaseShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotBaseShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotBaseShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotBaseShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotBaseShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/PotBaseShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/PotBaseShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/PotBaseShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/PotBaseShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/PotBaseShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/PotBaseShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/PotBaseShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/PotBaseShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/PotBaseShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotBaseShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotBaseShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotBaseShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotBaseShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotBaseShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotBaseShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotBaseShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotBaseShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotBaseShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotBaseShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotBaseShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotBaseShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/PotBaseShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/PotBaseShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/PotBaseShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/PotBaseShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/PotBaseShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/PotBaseShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotBaseShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotBaseShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotBaseShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotBaseShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotBaseShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotBaseShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotBaseShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotBaseShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotBaseShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotBaseShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotBaseShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotBaseShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "PotShader1SG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotShader1SG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotShader1SG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotShader1SG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotShader1SG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotShader1SG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotShader1SG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotShader1SG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/PotShader1SG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/PotShader1SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/PotShader1SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/PotShader1SG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/PotShader1SG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/PotShader1SG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/PotShader1SG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/PotShader1SG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/PotShader1SG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotShader1SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotShader1SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotShader1SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotShader1SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotShader1SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotShader1SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/PotShader1SG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/PotShader1SG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/PotShader1SG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/PotShader1SG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/PotShader1SG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/PotShader1SG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotShader1SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotShader1SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotShader1SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotShader1SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotShader1SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotShader1SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "PotShader2SG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotShader2SG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotShader2SG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotShader2SG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotShader2SG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotShader2SG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotShader2SG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotShader2SG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/PotShader2SG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/PotShader2SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/PotShader2SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/PotShader2SG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/PotShader2SG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/PotShader2SG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/PotShader2SG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/PotShader2SG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/PotShader2SG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotShader2SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotShader2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotShader2SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotShader2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotShader2SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotShader2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotShader2SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotShader2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotShader2SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotShader2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotShader2SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotShader2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/PotShader2SG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/PotShader2SG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/PotShader2SG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/PotShader2SG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/PotShader2SG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/PotShader2SG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotShader2SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotShader2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotShader2SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotShader2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotShader2SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotShader2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotShader2SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotShader2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotShader2SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotShader2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotShader2SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotShader2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "PotShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_PotShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/PotShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/PotShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/PotShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/PotShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/PotShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/PotShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/PotShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/PotShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/PotShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/PotShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/PotShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/PotShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/PotShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/PotShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/PotShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PotShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PotShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "PrinterShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_PrinterShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_PrinterShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_PrinterShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_PrinterShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_PrinterShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_PrinterShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_PrinterShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/PrinterShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/PrinterShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/PrinterShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/PrinterShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/PrinterShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/PrinterShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/PrinterShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/PrinterShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/PrinterShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PrinterShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PrinterShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PrinterShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PrinterShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PrinterShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PrinterShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PrinterShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PrinterShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PrinterShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PrinterShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/PrinterShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PrinterShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/PrinterShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/PrinterShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/PrinterShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/PrinterShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/PrinterShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/PrinterShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PrinterShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PrinterShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PrinterShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PrinterShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PrinterShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PrinterShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/PrinterShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PrinterShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PrinterShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PrinterShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/PrinterShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/PrinterShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "RackShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_RackShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_RackShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_RackShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_RackShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_RackShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_RackShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_RackShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/RackShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/RackShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/RackShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/RackShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/RackShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/RackShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/RackShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/RackShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/RackShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RackShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RackShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RackShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RackShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RackShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RackShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RackShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RackShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RackShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RackShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/RackShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RackShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/RackShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/RackShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/RackShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/RackShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/RackShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/RackShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RackShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RackShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RackShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RackShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RackShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RackShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/RackShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RackShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RackShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RackShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RackShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RackShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "RecordShader1SG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_RecordShader1SG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_RecordShader1SG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_RecordShader1SG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_RecordShader1SG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_RecordShader1SG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_RecordShader1SG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_RecordShader1SG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/RecordShader1SG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/RecordShader1SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/RecordShader1SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/RecordShader1SG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/RecordShader1SG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/RecordShader1SG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/RecordShader1SG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/RecordShader1SG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/RecordShader1SG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RecordShader1SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RecordShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RecordShader1SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RecordShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RecordShader1SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RecordShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RecordShader1SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RecordShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RecordShader1SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RecordShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/RecordShader1SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RecordShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/RecordShader1SG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/RecordShader1SG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/RecordShader1SG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/RecordShader1SG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/RecordShader1SG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/RecordShader1SG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RecordShader1SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RecordShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RecordShader1SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RecordShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RecordShader1SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RecordShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/RecordShader1SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RecordShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RecordShader1SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RecordShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RecordShader1SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RecordShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "RecordShader2SG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_RecordShader2SG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_RecordShader2SG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_RecordShader2SG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_RecordShader2SG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_RecordShader2SG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_RecordShader2SG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_RecordShader2SG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/RecordShader2SG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/RecordShader2SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/RecordShader2SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/RecordShader2SG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/RecordShader2SG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/RecordShader2SG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/RecordShader2SG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/RecordShader2SG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/RecordShader2SG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RecordShader2SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RecordShader2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RecordShader2SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RecordShader2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RecordShader2SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RecordShader2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RecordShader2SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RecordShader2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RecordShader2SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RecordShader2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/RecordShader2SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RecordShader2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/RecordShader2SG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/RecordShader2SG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/RecordShader2SG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/RecordShader2SG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/RecordShader2SG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/RecordShader2SG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RecordShader2SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RecordShader2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RecordShader2SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RecordShader2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RecordShader2SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RecordShader2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/RecordShader2SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RecordShader2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RecordShader2SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RecordShader2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RecordShader2SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RecordShader2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "RecordShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_RecordShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_RecordShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_RecordShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_RecordShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_RecordShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_RecordShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_RecordShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/RecordShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/RecordShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/RecordShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/RecordShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/RecordShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/RecordShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/RecordShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/RecordShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/RecordShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RecordShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RecordShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RecordShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RecordShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RecordShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RecordShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RecordShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RecordShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RecordShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RecordShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/RecordShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RecordShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/RecordShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/RecordShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/RecordShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/RecordShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/RecordShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/RecordShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RecordShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RecordShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RecordShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RecordShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RecordShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RecordShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/RecordShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RecordShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RecordShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RecordShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RecordShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RecordShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "RoofShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_RoofShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_RoofShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_RoofShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_RoofShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_RoofShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_RoofShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_RoofShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/RoofShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/RoofShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/RoofShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/RoofShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/RoofShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/RoofShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/RoofShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/RoofShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/RoofShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RoofShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RoofShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RoofShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RoofShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RoofShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RoofShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RoofShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RoofShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RoofShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RoofShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/RoofShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RoofShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/RoofShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/RoofShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/RoofShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/RoofShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/RoofShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/RoofShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RoofShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RoofShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RoofShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RoofShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RoofShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RoofShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/RoofShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RoofShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RoofShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RoofShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RoofShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RoofShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "RugShader1SG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_RugShader1SG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_RugShader1SG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_RugShader1SG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_RugShader1SG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_RugShader1SG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_RugShader1SG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_RugShader1SG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/RugShader1SG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/RugShader1SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/RugShader1SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/RugShader1SG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/RugShader1SG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/RugShader1SG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/RugShader1SG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/RugShader1SG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/RugShader1SG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RugShader1SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RugShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RugShader1SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RugShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RugShader1SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RugShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RugShader1SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RugShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RugShader1SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RugShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/RugShader1SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RugShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/RugShader1SG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/RugShader1SG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/RugShader1SG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/RugShader1SG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/RugShader1SG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/RugShader1SG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RugShader1SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RugShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RugShader1SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RugShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RugShader1SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RugShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/RugShader1SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RugShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RugShader1SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RugShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RugShader1SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RugShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "RugShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_RugShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_RugShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_RugShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_RugShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_RugShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_RugShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_RugShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/RugShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/RugShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/RugShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/RugShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/RugShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/RugShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/RugShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/RugShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/RugShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RugShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RugShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RugShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RugShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RugShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RugShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RugShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RugShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RugShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RugShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/RugShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RugShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/RugShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/RugShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/RugShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/RugShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/RugShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/RugShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RugShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RugShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RugShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RugShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RugShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RugShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/RugShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RugShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RugShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RugShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/RugShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/RugShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "SeedShelfShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_SeedShelfShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_SeedShelfShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_SeedShelfShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_SeedShelfShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_SeedShelfShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_SeedShelfShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_SeedShelfShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/SeedShelfShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/SeedShelfShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/SeedShelfShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/SeedShelfShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/SeedShelfShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/SeedShelfShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/SeedShelfShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/SeedShelfShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/SeedShelfShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SeedShelfShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SeedShelfShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SeedShelfShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SeedShelfShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SeedShelfShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SeedShelfShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SeedShelfShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SeedShelfShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SeedShelfShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SeedShelfShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/SeedShelfShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SeedShelfShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/SeedShelfShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/SeedShelfShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/SeedShelfShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/SeedShelfShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/SeedShelfShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/SeedShelfShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SeedShelfShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SeedShelfShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SeedShelfShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SeedShelfShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SeedShelfShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SeedShelfShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/SeedShelfShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SeedShelfShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SeedShelfShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SeedShelfShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SeedShelfShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SeedShelfShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "ShelfShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_ShelfShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_ShelfShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_ShelfShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_ShelfShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_ShelfShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_ShelfShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_ShelfShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/ShelfShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/ShelfShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/ShelfShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/ShelfShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/ShelfShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/ShelfShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/ShelfShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/ShelfShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/ShelfShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/ShelfShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/ShelfShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/ShelfShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/ShelfShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/ShelfShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/ShelfShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/ShelfShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/ShelfShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/ShelfShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/ShelfShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/ShelfShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/ShelfShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/ShelfShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/ShelfShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/ShelfShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/ShelfShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/ShelfShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/ShelfShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/ShelfShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/ShelfShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/ShelfShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/ShelfShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/ShelfShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/ShelfShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/ShelfShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/ShelfShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/ShelfShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/ShelfShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/ShelfShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/ShelfShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "ShovelShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_ShovelShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_ShovelShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_ShovelShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_ShovelShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_ShovelShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_ShovelShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_ShovelShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/ShovelShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/ShovelShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/ShovelShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/ShovelShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/ShovelShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/ShovelShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/ShovelShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/ShovelShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/ShovelShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/ShovelShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/ShovelShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/ShovelShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/ShovelShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/ShovelShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/ShovelShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/ShovelShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/ShovelShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/ShovelShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/ShovelShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/ShovelShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/ShovelShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/ShovelShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/ShovelShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/ShovelShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/ShovelShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/ShovelShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/ShovelShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/ShovelShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/ShovelShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/ShovelShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/ShovelShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/ShovelShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/ShovelShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/ShovelShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/ShovelShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/ShovelShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/ShovelShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/ShovelShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/ShovelShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "SinkShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_SinkShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_SinkShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_SinkShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_SinkShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_SinkShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_SinkShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_SinkShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/SinkShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/SinkShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/SinkShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/SinkShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/SinkShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/SinkShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/SinkShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/SinkShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/SinkShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SinkShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SinkShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SinkShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SinkShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SinkShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SinkShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SinkShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SinkShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SinkShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SinkShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/SinkShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SinkShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/SinkShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/SinkShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/SinkShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/SinkShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/SinkShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/SinkShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SinkShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SinkShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SinkShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SinkShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SinkShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SinkShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/SinkShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SinkShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SinkShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SinkShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SinkShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SinkShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "SodaShader1SG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_SodaShader1SG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_SodaShader1SG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_SodaShader1SG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_SodaShader1SG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_SodaShader1SG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_SodaShader1SG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_SodaShader1SG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/SodaShader1SG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/SodaShader1SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/SodaShader1SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/SodaShader1SG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/SodaShader1SG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/SodaShader1SG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/SodaShader1SG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/SodaShader1SG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/SodaShader1SG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaShader1SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaShader1SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaShader1SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaShader1SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaShader1SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaShader1SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/SodaShader1SG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/SodaShader1SG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/SodaShader1SG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/SodaShader1SG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/SodaShader1SG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/SodaShader1SG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaShader1SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaShader1SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaShader1SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaShader1SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaShader1SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaShader1SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "SodaShader2SG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_SodaShader2SG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_SodaShader2SG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_SodaShader2SG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_SodaShader2SG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_SodaShader2SG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_SodaShader2SG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_SodaShader2SG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/SodaShader2SG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/SodaShader2SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/SodaShader2SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/SodaShader2SG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/SodaShader2SG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/SodaShader2SG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/SodaShader2SG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/SodaShader2SG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/SodaShader2SG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaShader2SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaShader2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaShader2SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaShader2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaShader2SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaShader2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaShader2SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaShader2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaShader2SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaShader2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaShader2SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaShader2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/SodaShader2SG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/SodaShader2SG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/SodaShader2SG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/SodaShader2SG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/SodaShader2SG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/SodaShader2SG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaShader2SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaShader2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaShader2SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaShader2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaShader2SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaShader2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaShader2SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaShader2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaShader2SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaShader2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaShader2SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaShader2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "SodaShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_SodaShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_SodaShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_SodaShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_SodaShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_SodaShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_SodaShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_SodaShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/SodaShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/SodaShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/SodaShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/SodaShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/SodaShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/SodaShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/SodaShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/SodaShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/SodaShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/SodaShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/SodaShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/SodaShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/SodaShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/SodaShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/SodaShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "SodaTopShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_SodaTopShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_SodaTopShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_SodaTopShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_SodaTopShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_SodaTopShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_SodaTopShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_SodaTopShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/SodaTopShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/SodaTopShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/SodaTopShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/SodaTopShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/SodaTopShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/SodaTopShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/SodaTopShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/SodaTopShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/SodaTopShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaTopShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaTopShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaTopShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaTopShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaTopShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaTopShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaTopShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaTopShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaTopShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaTopShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaTopShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaTopShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/SodaTopShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/SodaTopShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/SodaTopShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/SodaTopShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/SodaTopShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/SodaTopShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaTopShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaTopShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaTopShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaTopShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaTopShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaTopShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaTopShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaTopShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaTopShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaTopShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/SodaTopShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/SodaTopShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "StoolShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_StoolShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_StoolShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_StoolShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_StoolShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_StoolShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_StoolShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_StoolShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/StoolShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/StoolShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/StoolShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/StoolShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/StoolShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/StoolShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/StoolShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/StoolShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/StoolShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/StoolShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/StoolShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/StoolShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/StoolShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/StoolShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/StoolShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/StoolShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/StoolShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/StoolShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/StoolShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/StoolShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/StoolShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/StoolShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/StoolShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/StoolShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/StoolShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/StoolShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/StoolShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/StoolShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/StoolShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/StoolShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/StoolShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/StoolShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/StoolShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/StoolShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/StoolShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/StoolShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/StoolShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/StoolShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/StoolShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "VaseShader1SG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_VaseShader1SG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_VaseShader1SG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_VaseShader1SG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_VaseShader1SG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_VaseShader1SG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_VaseShader1SG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_VaseShader1SG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/VaseShader1SG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/VaseShader1SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/VaseShader1SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/VaseShader1SG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/VaseShader1SG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/VaseShader1SG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/VaseShader1SG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/VaseShader1SG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/VaseShader1SG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/VaseShader1SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/VaseShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/VaseShader1SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/VaseShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/VaseShader1SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/VaseShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/VaseShader1SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/VaseShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/VaseShader1SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/VaseShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/VaseShader1SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/VaseShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/VaseShader1SG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/VaseShader1SG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/VaseShader1SG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/VaseShader1SG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/VaseShader1SG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/VaseShader1SG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/VaseShader1SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/VaseShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/VaseShader1SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/VaseShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/VaseShader1SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/VaseShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/VaseShader1SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/VaseShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/VaseShader1SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/VaseShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/VaseShader1SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/VaseShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "VaseShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_VaseShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_VaseShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_VaseShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_VaseShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_VaseShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_VaseShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_VaseShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/VaseShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/VaseShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/VaseShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/VaseShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/VaseShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/VaseShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/VaseShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/VaseShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/VaseShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/VaseShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/VaseShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/VaseShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/VaseShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/VaseShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/VaseShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/VaseShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/VaseShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/VaseShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/VaseShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/VaseShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/VaseShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/VaseShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/VaseShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/VaseShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/VaseShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/VaseShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/VaseShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/VaseShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/VaseShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/VaseShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/VaseShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/VaseShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/VaseShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/VaseShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/VaseShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/VaseShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/VaseShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/VaseShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/VaseShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "WaterCanShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_WaterCanShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_WaterCanShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_WaterCanShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_WaterCanShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_WaterCanShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_WaterCanShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_WaterCanShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/WaterCanShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/WaterCanShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/WaterCanShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/WaterCanShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/WaterCanShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/WaterCanShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/WaterCanShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/WaterCanShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/WaterCanShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WaterCanShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WaterCanShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WaterCanShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WaterCanShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WaterCanShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WaterCanShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WaterCanShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WaterCanShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WaterCanShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WaterCanShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/WaterCanShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WaterCanShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/WaterCanShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/WaterCanShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/WaterCanShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/WaterCanShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/WaterCanShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/WaterCanShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WaterCanShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WaterCanShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WaterCanShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WaterCanShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WaterCanShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WaterCanShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/WaterCanShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WaterCanShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WaterCanShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WaterCanShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WaterCanShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WaterCanShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "WaterShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_WaterShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_WaterShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_WaterShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_WaterShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_WaterShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_WaterShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_WaterShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/WaterShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/WaterShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/WaterShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/WaterShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/WaterShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/WaterShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/WaterShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/WaterShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/WaterShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WaterShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WaterShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WaterShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WaterShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WaterShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WaterShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WaterShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WaterShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WaterShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WaterShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/WaterShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WaterShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/WaterShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/WaterShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/WaterShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/WaterShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/WaterShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/WaterShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WaterShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WaterShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WaterShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WaterShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WaterShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WaterShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/WaterShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WaterShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WaterShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WaterShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WaterShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WaterShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "WindowShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_WindowShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_WindowShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_WindowShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_WindowShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_WindowShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_WindowShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_WindowShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/WindowShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/WindowShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/WindowShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/WindowShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/WindowShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/WindowShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/WindowShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/WindowShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/WindowShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WindowShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WindowShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WindowShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WindowShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WindowShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WindowShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WindowShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WindowShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WindowShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WindowShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/WindowShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WindowShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/WindowShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/WindowShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/WindowShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/WindowShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/WindowShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/WindowShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WindowShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WindowShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WindowShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WindowShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WindowShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WindowShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/WindowShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WindowShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WindowShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WindowShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WindowShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WindowShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "WorkingTableShader1SG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_WorkingTableShader1SG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_WorkingTableShader1SG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_WorkingTableShader1SG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_WorkingTableShader1SG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_WorkingTableShader1SG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_WorkingTableShader1SG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_WorkingTableShader1SG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/WorkingTableShader1SG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/WorkingTableShader1SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/WorkingTableShader1SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/WorkingTableShader1SG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/WorkingTableShader1SG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/WorkingTableShader1SG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/WorkingTableShader1SG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/WorkingTableShader1SG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/WorkingTableShader1SG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WorkingTableShader1SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WorkingTableShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WorkingTableShader1SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WorkingTableShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WorkingTableShader1SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WorkingTableShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WorkingTableShader1SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WorkingTableShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WorkingTableShader1SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WorkingTableShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/WorkingTableShader1SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WorkingTableShader1SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/WorkingTableShader1SG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/WorkingTableShader1SG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/WorkingTableShader1SG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/WorkingTableShader1SG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/WorkingTableShader1SG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/WorkingTableShader1SG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WorkingTableShader1SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WorkingTableShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WorkingTableShader1SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WorkingTableShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WorkingTableShader1SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WorkingTableShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/WorkingTableShader1SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WorkingTableShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WorkingTableShader1SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WorkingTableShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WorkingTableShader1SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WorkingTableShader1SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "WorkingTableShaderSG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_WorkingTableShaderSG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_WorkingTableShaderSG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_WorkingTableShaderSG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_WorkingTableShaderSG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_WorkingTableShaderSG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_WorkingTableShaderSG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_WorkingTableShaderSG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/WorkingTableShaderSG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/WorkingTableShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/WorkingTableShaderSG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/WorkingTableShaderSG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/WorkingTableShaderSG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/WorkingTableShaderSG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/WorkingTableShaderSG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/WorkingTableShaderSG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/WorkingTableShaderSG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WorkingTableShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WorkingTableShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WorkingTableShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WorkingTableShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WorkingTableShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WorkingTableShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WorkingTableShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WorkingTableShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WorkingTableShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WorkingTableShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/WorkingTableShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WorkingTableShaderSG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/WorkingTableShaderSG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/WorkingTableShaderSG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/WorkingTableShaderSG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/WorkingTableShaderSG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/WorkingTableShaderSG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/WorkingTableShaderSG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WorkingTableShaderSG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WorkingTableShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WorkingTableShaderSG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WorkingTableShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WorkingTableShaderSG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WorkingTableShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/WorkingTableShaderSG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WorkingTableShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WorkingTableShaderSG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WorkingTableShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/WorkingTableShaderSG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/WorkingTableShaderSG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }

        def Material "standardSurface2SG" (
            customData = {
                dictionary adobe = {
                    dictionary painter = {
                        asset painterProject_spp = @C:/Users/ferri/OneDrive/Desktop/ClassWork/PlantShop3 - Copy.spp@
                    }
                }
            }
        )
        {
            asset inputs:ambientOcclusion_tex = @PlantShop3 - Copy_textures/PlantShopFix_standardSurface2SG_ambientOcclusion.1001.png@
            asset inputs:basecolor_tex = @PlantShop3 - Copy_textures/PlantShopFix_standardSurface2SG_BaseColor.1001.png@
            asset inputs:compositedNormalGL_tex = @PlantShop3 - Copy_textures/PlantShopFix_standardSurface2SG_Normal.1001.png@
            asset inputs:emissive_tex = @PlantShop3 - Copy_textures/PlantShopFix_standardSurface2SG_Emissive.1001.png@
            asset inputs:height_tex = @PlantShop3 - Copy_textures/PlantShopFix_standardSurface2SG_Height.1001.png@
            asset inputs:metallic_tex = @PlantShop3 - Copy_textures/PlantShopFix_standardSurface2SG_Metalness.1001.png@
            asset inputs:roughness_tex = @PlantShop3 - Copy_textures/PlantShopFix_standardSurface2SG_Roughness.1001.png@
            token outputs:adobe:surface.connect = </PlantShopFix_obj/material/standardSurface2SG/AdobeStandardMaterial_4_0/AdobeStandardMaterial_4_0Shader.outputs:surface>
            token outputs:displacement.connect = </PlantShopFix_obj/material/standardSurface2SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:displacement>
            token outputs:surface.connect = </PlantShopFix_obj/material/standardSurface2SG/UsdPreviewSurface/UsdPreviewSurfaceShader.outputs:surface>

            def NodeGraph "UsdPreviewSurface"
            {
                def Shader "UsdPreviewSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float3 inputs:diffuseColor.connect = </PlantShopFix_obj/material/standardSurface2SG/UsdPreviewSurface/diffuseColorTextureShader.outputs:rgb>
                    float3 inputs:emissiveColor.connect = </PlantShopFix_obj/material/standardSurface2SG/UsdPreviewSurface/emissiveColorTextureShader.outputs:rgb>
                    float inputs:ior = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/standardSurface2SG/UsdPreviewSurface/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/standardSurface2SG/UsdPreviewSurface/normalTextureShader.outputs:rgb>
                    float inputs:occlusion.connect = </PlantShopFix_obj/material/standardSurface2SG/UsdPreviewSurface/occlusionTextureShader.outputs:r>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/standardSurface2SG/UsdPreviewSurface/roughnessTextureShader.outputs:r>
                    token outputs:displacement
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "diffuseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/standardSurface2SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/standardSurface2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/standardSurface2SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/standardSurface2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/standardSurface2SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/standardSurface2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "emissiveColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/standardSurface2SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/standardSurface2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "occlusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/standardSurface2SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/standardSurface2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/standardSurface2SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/standardSurface2SG/UsdPreviewSurface/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }
            }

            def NodeGraph "AdobeStandardMaterial_4_0"
            {
                def Shader "AdobeStandardMaterial_4_0Shader"
                {
                    uniform token info:id = "AdobeStandardMaterial_4_0"
                    float inputs:ambientOcclusion.connect = </PlantShopFix_obj/material/standardSurface2SG/AdobeStandardMaterial_4_0/ambientOcclusionTextureShader.outputs:r>
                    float3 inputs:baseColor.connect = </PlantShopFix_obj/material/standardSurface2SG/AdobeStandardMaterial_4_0/baseColorTextureShader.outputs:rgb>
                    float inputs:coatIOR = 1.6
                    float3 inputs:emissive.connect = </PlantShopFix_obj/material/standardSurface2SG/AdobeStandardMaterial_4_0/emissiveTextureShader.outputs:rgb>
                    float inputs:emissiveIntensity = 1
                    float inputs:IOR = 1.4
                    float inputs:metallic.connect = </PlantShopFix_obj/material/standardSurface2SG/AdobeStandardMaterial_4_0/metallicTextureShader.outputs:r>
                    normal3f inputs:normal.connect = </PlantShopFix_obj/material/standardSurface2SG/AdobeStandardMaterial_4_0/normalTextureShader.outputs:rgb>
                    float inputs:roughness.connect = </PlantShopFix_obj/material/standardSurface2SG/AdobeStandardMaterial_4_0/roughnessTextureShader.outputs:r>
                    token outputs:surface
                }

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname = "st"
                    float2 outputs:result
                }

                def Shader "baseColorTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/standardSurface2SG.inputs:basecolor_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/standardSurface2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "roughnessTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/standardSurface2SG.inputs:roughness_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/standardSurface2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "metallicTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/standardSurface2SG.inputs:metallic_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/standardSurface2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }

                def Shader "normalTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    float4 inputs:bias = (-1, -1, -1, 0)
                    asset inputs:file.connect = </PlantShopFix_obj/material/standardSurface2SG.inputs:compositedNormalGL_tex>
                    float4 inputs:scale = (2, 2, 2, 1)
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/standardSurface2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    normal3f outputs:rgb
                }

                def Shader "emissiveTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/standardSurface2SG.inputs:emissive_tex>
                    token inputs:sourceColorSpace = "sRGB"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/standardSurface2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float3 outputs:rgb
                }

                def Shader "ambientOcclusionTextureShader"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file.connect = </PlantShopFix_obj/material/standardSurface2SG.inputs:ambientOcclusion_tex>
                    token inputs:sourceColorSpace = "raw"
                    float2 inputs:st.connect = </PlantShopFix_obj/material/standardSurface2SG/AdobeStandardMaterial_4_0/TexCoordReader.outputs:result>
                    token inputs:wrapS = "repeat"
                    token inputs:wrapT = "repeat"
                    float outputs:r
                }
            }
        }
    }

    over "WindowDirt_ShopBase_Shop"
    {
        over "WindowDirt_ShopBase_Shop" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/DirtShaderSG>
        }
    }

    over "ShopBase_Shop_FrontShopBase"
    {
        over "ShopBase_Shop_FrontShopBase" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/FrontShopBaseShaderSG>
        }
    }

    over "ShopBase_Shop_MainShopBAse"
    {
        over "ShopBase_Shop_MainShopBAse" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/standardSurface2SG>
        }
    }

    over "ShopBase_Shop_Door"
    {
        over "ShopBase_Shop_Door" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/DoorShaderSG>
        }
    }

    over "ShopBase_Shop_Door_pasted__Knob9"
    {
        over "ShopBase_Shop_Door_pasted__Knob9" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/KnobShaderSG>
        }
    }

    over "ShopBase_Shop_Door_pasted__Knob10"
    {
        over "ShopBase_Shop_Door_pasted__Knob10" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/KnobShaderSG>
        }
    }

    over "Shop_Window33_Windows_Windows"
    {
        over "Shop_Window33_Windows_Windows" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_Windows_Window34"
    {
        over "Shop_Windows_Windows_Window34" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_Windows_Window35"
    {
        over "Shop_Windows_Windows_Window35" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_Windows_Window36"
    {
        over "Shop_Windows_Windows_Window36" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_Windows_Window37"
    {
        over "Shop_Windows_Windows_Window37" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_Windows_Window38"
    {
        over "Shop_Windows_Windows_Window38" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_Windows_Window39"
    {
        over "Shop_Windows_Windows_Window39" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_Windows_Window40"
    {
        over "Shop_Windows_Windows_Window40" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_Windows_Window41"
    {
        over "Shop_Windows_Windows_Window41" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_Windows_Window42"
    {
        over "Shop_Windows_Windows_Window42" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_Windows_Window43"
    {
        over "Shop_Windows_Windows_Window43" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_Windows_Window44"
    {
        over "Shop_Windows_Windows_Window44" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_Windows_Window45"
    {
        over "Shop_Windows_Windows_Window45" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_Windows_Window46"
    {
        over "Shop_Windows_Windows_Window46" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_Windows_Window47"
    {
        over "Shop_Windows_Windows_Window47" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_Windows_Window48"
    {
        over "Shop_Windows_Windows_Window48" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_Windows_Window49"
    {
        over "Shop_Windows_Windows_Window49" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_Windows_Window50"
    {
        over "Shop_Windows_Windows_Window50" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_Windows_Window51"
    {
        over "Shop_Windows_Windows_Window51" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_Windows_Window52"
    {
        over "Shop_Windows_Windows_Window52" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_Windows_Window53"
    {
        over "Shop_Windows_Windows_Window53" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_Windows_Window54"
    {
        over "Shop_Windows_Windows_Window54" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_Windows_Window55"
    {
        over "Shop_Windows_Windows_Window55" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_Windows_Window56"
    {
        over "Shop_Windows_Windows_Window56" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_Windows_Window57"
    {
        over "Shop_Windows_Windows_Window57" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_Windows_Window58"
    {
        over "Shop_Windows_Windows_Window58" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_Windows_Window59"
    {
        over "Shop_Windows_Windows_Window59" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_Windows_Window60"
    {
        over "Shop_Windows_Windows_Window60" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_Windows_Window61"
    {
        over "Shop_Windows_Windows_Window61" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_Windows_Window62"
    {
        over "Shop_Windows_Windows_Window62" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_Windows_Window63"
    {
        over "Shop_Windows_Windows_Window63" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_Windows_Window64"
    {
        over "Shop_Windows_Windows_Window64" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWallWindow67_FrontWallWindows"
    {
        over "Shop_Windows_FrontWallWindow67_FrontWallWindows" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWallWindows_FrontWallWindow68"
    {
        over "Shop_Windows_FrontWallWindows_FrontWallWindow68" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWallWindows_FrontWallWindow69"
    {
        over "Shop_Windows_FrontWallWindows_FrontWallWindow69" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWallWindows_FrontWallWindow70"
    {
        over "Shop_Windows_FrontWallWindows_FrontWallWindow70" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWallWindows_FrontWallWindow71"
    {
        over "Shop_Windows_FrontWallWindows_FrontWallWindow71" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWallWindows_FrontWallWindow72"
    {
        over "Shop_Windows_FrontWallWindows_FrontWallWindow72" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWallWindows_FrontWallWindow73"
    {
        over "Shop_Windows_FrontWallWindows_FrontWallWindow73" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWallWindows_FrontWallWindow74"
    {
        over "Shop_Windows_FrontWallWindows_FrontWallWindow74" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWallWindows_FrontWallWindow75"
    {
        over "Shop_Windows_FrontWallWindows_FrontWallWindow75" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWallWindows_FrontWallWindow76"
    {
        over "Shop_Windows_FrontWallWindows_FrontWallWindow76" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWallWindows_FrontWallWindow77"
    {
        over "Shop_Windows_FrontWallWindows_FrontWallWindow77" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWallWindows_FrontWallWindow78"
    {
        over "Shop_Windows_FrontWallWindows_FrontWallWindow78" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWindow1_FrontWindows"
    {
        over "Shop_Windows_FrontWindow1_FrontWindows" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWindows_FrontWindow2"
    {
        over "Shop_Windows_FrontWindows_FrontWindow2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWindows_FrontWindow3"
    {
        over "Shop_Windows_FrontWindows_FrontWindow3" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWindows_FrontWindow4"
    {
        over "Shop_Windows_FrontWindows_FrontWindow4" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWindows_FrontWindow5"
    {
        over "Shop_Windows_FrontWindows_FrontWindow5" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWindows_FrontWindow6"
    {
        over "Shop_Windows_FrontWindows_FrontWindow6" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWindows_FrontWindow7"
    {
        over "Shop_Windows_FrontWindows_FrontWindow7" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWindows_FrontWindow8"
    {
        over "Shop_Windows_FrontWindows_FrontWindow8" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWindows_FrontWindow9"
    {
        over "Shop_Windows_FrontWindows_FrontWindow9" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWindows_FrontWindow10"
    {
        over "Shop_Windows_FrontWindows_FrontWindow10" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWindows_FrontWindow11"
    {
        over "Shop_Windows_FrontWindows_FrontWindow11" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWindows_FrontWindow12"
    {
        over "Shop_Windows_FrontWindows_FrontWindow12" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWindows_FrontWindow13"
    {
        over "Shop_Windows_FrontWindows_FrontWindow13" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWindows_FrontWindow14"
    {
        over "Shop_Windows_FrontWindows_FrontWindow14" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWindows_FrontWindow15"
    {
        over "Shop_Windows_FrontWindows_FrontWindow15" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWindows_FrontWindow16"
    {
        over "Shop_Windows_FrontWindows_FrontWindow16" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWindows_FrontWindow17"
    {
        over "Shop_Windows_FrontWindows_FrontWindow17" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWindows_FrontWindow18"
    {
        over "Shop_Windows_FrontWindows_FrontWindow18" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWindows_FrontWindow19"
    {
        over "Shop_Windows_FrontWindows_FrontWindow19" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWindows_FrontWindow20"
    {
        over "Shop_Windows_FrontWindows_FrontWindow20" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWindows_FrontWindow21"
    {
        over "Shop_Windows_FrontWindows_FrontWindow21" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWindows_FrontWindow22"
    {
        over "Shop_Windows_FrontWindows_FrontWindow22" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWindows_FrontWindow23"
    {
        over "Shop_Windows_FrontWindows_FrontWindow23" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWindows_FrontWindow24"
    {
        over "Shop_Windows_FrontWindows_FrontWindow24" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWindows_FrontWindow25"
    {
        over "Shop_Windows_FrontWindows_FrontWindow25" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWindows_FrontWindow26"
    {
        over "Shop_Windows_FrontWindows_FrontWindow26" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWindows_FrontWindow27"
    {
        over "Shop_Windows_FrontWindows_FrontWindow27" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWindows_FrontWindow28"
    {
        over "Shop_Windows_FrontWindows_FrontWindow28" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWindows_FrontWindow29"
    {
        over "Shop_Windows_FrontWindows_FrontWindow29" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWindows_FrontWindow30"
    {
        over "Shop_Windows_FrontWindows_FrontWindow30" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWindows_FrontWindow31"
    {
        over "Shop_Windows_FrontWindows_FrontWindow31" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Windows_FrontWindows_FrontWindow32"
    {
        over "Shop_Windows_FrontWindows_FrontWindow32" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_Roof"
    {
        over "Shop_Roof_Roof" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/RoofShaderSG>
        }
    }

    over "Shop_Roof_RoofWindow98_RoofWindows"
    {
        over "Shop_Roof_RoofWindow98_RoofWindows" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow99"
    {
        over "Shop_Roof_RoofWindows_RoofWindow99" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow100"
    {
        over "Shop_Roof_RoofWindows_RoofWindow100" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow101"
    {
        over "Shop_Roof_RoofWindows_RoofWindow101" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow102"
    {
        over "Shop_Roof_RoofWindows_RoofWindow102" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow103"
    {
        over "Shop_Roof_RoofWindows_RoofWindow103" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow104"
    {
        over "Shop_Roof_RoofWindows_RoofWindow104" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow105"
    {
        over "Shop_Roof_RoofWindows_RoofWindow105" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow106"
    {
        over "Shop_Roof_RoofWindows_RoofWindow106" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow107"
    {
        over "Shop_Roof_RoofWindows_RoofWindow107" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow108"
    {
        over "Shop_Roof_RoofWindows_RoofWindow108" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow109"
    {
        over "Shop_Roof_RoofWindows_RoofWindow109" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow110"
    {
        over "Shop_Roof_RoofWindows_RoofWindow110" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow111"
    {
        over "Shop_Roof_RoofWindows_RoofWindow111" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow112"
    {
        over "Shop_Roof_RoofWindows_RoofWindow112" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow113"
    {
        over "Shop_Roof_RoofWindows_RoofWindow113" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow114"
    {
        over "Shop_Roof_RoofWindows_RoofWindow114" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow115"
    {
        over "Shop_Roof_RoofWindows_RoofWindow115" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow116"
    {
        over "Shop_Roof_RoofWindows_RoofWindow116" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow117"
    {
        over "Shop_Roof_RoofWindows_RoofWindow117" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow118"
    {
        over "Shop_Roof_RoofWindows_RoofWindow118" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow119"
    {
        over "Shop_Roof_RoofWindows_RoofWindow119" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow120"
    {
        over "Shop_Roof_RoofWindows_RoofWindow120" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow121"
    {
        over "Shop_Roof_RoofWindows_RoofWindow121" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow122"
    {
        over "Shop_Roof_RoofWindows_RoofWindow122" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow123"
    {
        over "Shop_Roof_RoofWindows_RoofWindow123" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow124"
    {
        over "Shop_Roof_RoofWindows_RoofWindow124" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow125"
    {
        over "Shop_Roof_RoofWindows_RoofWindow125" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow126"
    {
        over "Shop_Roof_RoofWindows_RoofWindow126" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow127"
    {
        over "Shop_Roof_RoofWindows_RoofWindow127" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow128"
    {
        over "Shop_Roof_RoofWindows_RoofWindow128" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow129"
    {
        over "Shop_Roof_RoofWindows_RoofWindow129" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow130"
    {
        over "Shop_Roof_RoofWindows_RoofWindow130" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow131"
    {
        over "Shop_Roof_RoofWindows_RoofWindow131" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow132"
    {
        over "Shop_Roof_RoofWindows_RoofWindow132" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow133"
    {
        over "Shop_Roof_RoofWindows_RoofWindow133" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow134"
    {
        over "Shop_Roof_RoofWindows_RoofWindow134" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow135"
    {
        over "Shop_Roof_RoofWindows_RoofWindow135" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow136"
    {
        over "Shop_Roof_RoofWindows_RoofWindow136" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow137"
    {
        over "Shop_Roof_RoofWindows_RoofWindow137" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow138"
    {
        over "Shop_Roof_RoofWindows_RoofWindow138" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow139"
    {
        over "Shop_Roof_RoofWindows_RoofWindow139" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow140"
    {
        over "Shop_Roof_RoofWindows_RoofWindow140" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow141"
    {
        over "Shop_Roof_RoofWindows_RoofWindow141" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow142"
    {
        over "Shop_Roof_RoofWindows_RoofWindow142" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow143"
    {
        over "Shop_Roof_RoofWindows_RoofWindow143" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow144"
    {
        over "Shop_Roof_RoofWindows_RoofWindow144" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow145"
    {
        over "Shop_Roof_RoofWindows_RoofWindow145" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow146"
    {
        over "Shop_Roof_RoofWindows_RoofWindow146" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow147"
    {
        over "Shop_Roof_RoofWindows_RoofWindow147" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow148"
    {
        over "Shop_Roof_RoofWindows_RoofWindow148" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow149"
    {
        over "Shop_Roof_RoofWindows_RoofWindow149" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow150"
    {
        over "Shop_Roof_RoofWindows_RoofWindow150" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow151"
    {
        over "Shop_Roof_RoofWindows_RoofWindow151" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow152"
    {
        over "Shop_Roof_RoofWindows_RoofWindow152" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow153"
    {
        over "Shop_Roof_RoofWindows_RoofWindow153" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow154"
    {
        over "Shop_Roof_RoofWindows_RoofWindow154" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow155"
    {
        over "Shop_Roof_RoofWindows_RoofWindow155" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow156"
    {
        over "Shop_Roof_RoofWindows_RoofWindow156" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow157"
    {
        over "Shop_Roof_RoofWindows_RoofWindow157" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow158"
    {
        over "Shop_Roof_RoofWindows_RoofWindow158" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow159"
    {
        over "Shop_Roof_RoofWindows_RoofWindow159" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow160"
    {
        over "Shop_Roof_RoofWindows_RoofWindow160" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow161"
    {
        over "Shop_Roof_RoofWindows_RoofWindow161" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow178"
    {
        over "Shop_Roof_RoofWindows_RoofWindow178" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow180"
    {
        over "Shop_Roof_RoofWindows_RoofWindow180" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow181"
    {
        over "Shop_Roof_RoofWindows_RoofWindow181" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow182"
    {
        over "Shop_Roof_RoofWindows_RoofWindow182" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow183"
    {
        over "Shop_Roof_RoofWindows_RoofWindow183" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow184"
    {
        over "Shop_Roof_RoofWindows_RoofWindow184" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow185"
    {
        over "Shop_Roof_RoofWindows_RoofWindow185" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow186"
    {
        over "Shop_Roof_RoofWindows_RoofWindow186" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow187"
    {
        over "Shop_Roof_RoofWindows_RoofWindow187" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow188"
    {
        over "Shop_Roof_RoofWindows_RoofWindow188" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow189"
    {
        over "Shop_Roof_RoofWindows_RoofWindow189" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow190"
    {
        over "Shop_Roof_RoofWindows_RoofWindow190" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow191"
    {
        over "Shop_Roof_RoofWindows_RoofWindow191" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow192"
    {
        over "Shop_Roof_RoofWindows_RoofWindow192" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow193"
    {
        over "Shop_Roof_RoofWindows_RoofWindow193" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow194"
    {
        over "Shop_Roof_RoofWindows_RoofWindow194" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow195"
    {
        over "Shop_Roof_RoofWindows_RoofWindow195" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow196"
    {
        over "Shop_Roof_RoofWindows_RoofWindow196" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow197"
    {
        over "Shop_Roof_RoofWindows_RoofWindow197" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow198"
    {
        over "Shop_Roof_RoofWindows_RoofWindow198" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow199"
    {
        over "Shop_Roof_RoofWindows_RoofWindow199" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow200"
    {
        over "Shop_Roof_RoofWindows_RoofWindow200" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow201"
    {
        over "Shop_Roof_RoofWindows_RoofWindow201" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow202"
    {
        over "Shop_Roof_RoofWindows_RoofWindow202" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow203"
    {
        over "Shop_Roof_RoofWindows_RoofWindow203" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow204"
    {
        over "Shop_Roof_RoofWindows_RoofWindow204" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow205"
    {
        over "Shop_Roof_RoofWindows_RoofWindow205" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow206"
    {
        over "Shop_Roof_RoofWindows_RoofWindow206" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow207"
    {
        over "Shop_Roof_RoofWindows_RoofWindow207" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow208"
    {
        over "Shop_Roof_RoofWindows_RoofWindow208" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow209"
    {
        over "Shop_Roof_RoofWindows_RoofWindow209" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow210"
    {
        over "Shop_Roof_RoofWindows_RoofWindow210" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow211"
    {
        over "Shop_Roof_RoofWindows_RoofWindow211" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow212"
    {
        over "Shop_Roof_RoofWindows_RoofWindow212" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow231"
    {
        over "Shop_Roof_RoofWindows_RoofWindow231" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow232"
    {
        over "Shop_Roof_RoofWindows_RoofWindow232" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow233"
    {
        over "Shop_Roof_RoofWindows_RoofWindow233" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow234"
    {
        over "Shop_Roof_RoofWindows_RoofWindow234" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow235"
    {
        over "Shop_Roof_RoofWindows_RoofWindow235" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow236"
    {
        over "Shop_Roof_RoofWindows_RoofWindow236" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow237"
    {
        over "Shop_Roof_RoofWindows_RoofWindow237" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow238"
    {
        over "Shop_Roof_RoofWindows_RoofWindow238" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow239"
    {
        over "Shop_Roof_RoofWindows_RoofWindow239" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow240"
    {
        over "Shop_Roof_RoofWindows_RoofWindow240" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow241"
    {
        over "Shop_Roof_RoofWindows_RoofWindow241" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow242"
    {
        over "Shop_Roof_RoofWindows_RoofWindow242" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow243"
    {
        over "Shop_Roof_RoofWindows_RoofWindow243" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow244"
    {
        over "Shop_Roof_RoofWindows_RoofWindow244" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow245"
    {
        over "Shop_Roof_RoofWindows_RoofWindow245" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow246"
    {
        over "Shop_Roof_RoofWindows_RoofWindow246" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow247"
    {
        over "Shop_Roof_RoofWindows_RoofWindow247" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow248"
    {
        over "Shop_Roof_RoofWindows_RoofWindow248" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow249"
    {
        over "Shop_Roof_RoofWindows_RoofWindow249" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow250"
    {
        over "Shop_Roof_RoofWindows_RoofWindow250" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow251"
    {
        over "Shop_Roof_RoofWindows_RoofWindow251" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow252"
    {
        over "Shop_Roof_RoofWindows_RoofWindow252" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow253"
    {
        over "Shop_Roof_RoofWindows_RoofWindow253" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow254"
    {
        over "Shop_Roof_RoofWindows_RoofWindow254" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow255"
    {
        over "Shop_Roof_RoofWindows_RoofWindow255" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow256"
    {
        over "Shop_Roof_RoofWindows_RoofWindow256" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow257"
    {
        over "Shop_Roof_RoofWindows_RoofWindow257" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow258"
    {
        over "Shop_Roof_RoofWindows_RoofWindow258" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow259"
    {
        over "Shop_Roof_RoofWindows_RoofWindow259" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow260"
    {
        over "Shop_Roof_RoofWindows_RoofWindow260" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow261"
    {
        over "Shop_Roof_RoofWindows_RoofWindow261" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow262"
    {
        over "Shop_Roof_RoofWindows_RoofWindow262" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow263"
    {
        over "Shop_Roof_RoofWindows_RoofWindow263" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow264"
    {
        over "Shop_Roof_RoofWindows_RoofWindow264" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow265"
    {
        over "Shop_Roof_RoofWindows_RoofWindow265" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow266"
    {
        over "Shop_Roof_RoofWindows_RoofWindow266" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow267"
    {
        over "Shop_Roof_RoofWindows_RoofWindow267" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow268"
    {
        over "Shop_Roof_RoofWindows_RoofWindow268" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow269"
    {
        over "Shop_Roof_RoofWindows_RoofWindow269" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow270"
    {
        over "Shop_Roof_RoofWindows_RoofWindow270" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow271"
    {
        over "Shop_Roof_RoofWindows_RoofWindow271" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow272"
    {
        over "Shop_Roof_RoofWindows_RoofWindow272" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow273"
    {
        over "Shop_Roof_RoofWindows_RoofWindow273" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow274"
    {
        over "Shop_Roof_RoofWindows_RoofWindow274" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow275"
    {
        over "Shop_Roof_RoofWindows_RoofWindow275" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow276"
    {
        over "Shop_Roof_RoofWindows_RoofWindow276" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow277"
    {
        over "Shop_Roof_RoofWindows_RoofWindow277" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow278"
    {
        over "Shop_Roof_RoofWindows_RoofWindow278" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow279"
    {
        over "Shop_Roof_RoofWindows_RoofWindow279" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow280"
    {
        over "Shop_Roof_RoofWindows_RoofWindow280" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow281"
    {
        over "Shop_Roof_RoofWindows_RoofWindow281" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow282"
    {
        over "Shop_Roof_RoofWindows_RoofWindow282" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow283"
    {
        over "Shop_Roof_RoofWindows_RoofWindow283" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow284"
    {
        over "Shop_Roof_RoofWindows_RoofWindow284" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow285"
    {
        over "Shop_Roof_RoofWindows_RoofWindow285" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow286"
    {
        over "Shop_Roof_RoofWindows_RoofWindow286" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow287"
    {
        over "Shop_Roof_RoofWindows_RoofWindow287" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow288"
    {
        over "Shop_Roof_RoofWindows_RoofWindow288" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow289"
    {
        over "Shop_Roof_RoofWindows_RoofWindow289" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow290"
    {
        over "Shop_Roof_RoofWindows_RoofWindow290" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow291"
    {
        over "Shop_Roof_RoofWindows_RoofWindow291" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow292"
    {
        over "Shop_Roof_RoofWindows_RoofWindow292" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow293"
    {
        over "Shop_Roof_RoofWindows_RoofWindow293" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow294"
    {
        over "Shop_Roof_RoofWindows_RoofWindow294" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow311"
    {
        over "Shop_Roof_RoofWindows_RoofWindow311" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow313"
    {
        over "Shop_Roof_RoofWindows_RoofWindow313" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow314"
    {
        over "Shop_Roof_RoofWindows_RoofWindow314" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow315"
    {
        over "Shop_Roof_RoofWindows_RoofWindow315" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow316"
    {
        over "Shop_Roof_RoofWindows_RoofWindow316" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow317"
    {
        over "Shop_Roof_RoofWindows_RoofWindow317" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow318"
    {
        over "Shop_Roof_RoofWindows_RoofWindow318" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow319"
    {
        over "Shop_Roof_RoofWindows_RoofWindow319" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow320"
    {
        over "Shop_Roof_RoofWindows_RoofWindow320" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow321"
    {
        over "Shop_Roof_RoofWindows_RoofWindow321" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow322"
    {
        over "Shop_Roof_RoofWindows_RoofWindow322" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow323"
    {
        over "Shop_Roof_RoofWindows_RoofWindow323" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow324"
    {
        over "Shop_Roof_RoofWindows_RoofWindow324" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow325"
    {
        over "Shop_Roof_RoofWindows_RoofWindow325" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow326"
    {
        over "Shop_Roof_RoofWindows_RoofWindow326" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow327"
    {
        over "Shop_Roof_RoofWindows_RoofWindow327" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow328"
    {
        over "Shop_Roof_RoofWindows_RoofWindow328" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow329"
    {
        over "Shop_Roof_RoofWindows_RoofWindow329" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow330"
    {
        over "Shop_Roof_RoofWindows_RoofWindow330" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow331"
    {
        over "Shop_Roof_RoofWindows_RoofWindow331" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow332"
    {
        over "Shop_Roof_RoofWindows_RoofWindow332" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow333"
    {
        over "Shop_Roof_RoofWindows_RoofWindow333" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow334"
    {
        over "Shop_Roof_RoofWindows_RoofWindow334" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow335"
    {
        over "Shop_Roof_RoofWindows_RoofWindow335" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow336"
    {
        over "Shop_Roof_RoofWindows_RoofWindow336" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow337"
    {
        over "Shop_Roof_RoofWindows_RoofWindow337" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow338"
    {
        over "Shop_Roof_RoofWindows_RoofWindow338" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow339"
    {
        over "Shop_Roof_RoofWindows_RoofWindow339" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow340"
    {
        over "Shop_Roof_RoofWindows_RoofWindow340" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow341"
    {
        over "Shop_Roof_RoofWindows_RoofWindow341" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow342"
    {
        over "Shop_Roof_RoofWindows_RoofWindow342" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow343"
    {
        over "Shop_Roof_RoofWindows_RoofWindow343" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow344"
    {
        over "Shop_Roof_RoofWindows_RoofWindow344" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow345"
    {
        over "Shop_Roof_RoofWindows_RoofWindow345" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow346"
    {
        over "Shop_Roof_RoofWindows_RoofWindow346" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow347"
    {
        over "Shop_Roof_RoofWindows_RoofWindow347" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow348"
    {
        over "Shop_Roof_RoofWindows_RoofWindow348" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow349"
    {
        over "Shop_Roof_RoofWindows_RoofWindow349" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow350"
    {
        over "Shop_Roof_RoofWindows_RoofWindow350" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow351"
    {
        over "Shop_Roof_RoofWindows_RoofWindow351" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow352"
    {
        over "Shop_Roof_RoofWindows_RoofWindow352" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Roof_RoofWindows_RoofWindow"
    {
        over "Shop_Roof_RoofWindows_RoofWindow" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WindowShaderSG>
        }
    }

    over "Shop_Light12_Lamps_Lights"
    {
        over "Shop_Light12_Lamps_Lights" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/LampShaderSG>
        }
    }

    over "Shop_Light12_Lamps_Lights_Bulb"
    {
        over "Shop_Light12_Lamps_Lights_Bulb" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/LampBulbShaderSG>
        }
    }

    over "Shop_Lamps_Lights_Light11"
    {
        over "Shop_Lamps_Lights_Light11" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/LampShaderSG>
        }
    }

    over "Shop_Lamps_Lights_Light11_Bulb"
    {
        over "Shop_Lamps_Lights_Light11_Bulb" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/LampBulbShaderSG>
        }
    }

    over "Shop_Lamps_Lights_Light10"
    {
        over "Shop_Lamps_Lights_Light10" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/LampShaderSG>
        }
    }

    over "Shop_Lamps_Lights_Light10_Bulb"
    {
        over "Shop_Lamps_Lights_Light10_Bulb" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/LampBulbShaderSG>
        }
    }

    over "Shop_Lamps_Lights_Light9"
    {
        over "Shop_Lamps_Lights_Light9" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/LampShaderSG>
        }
    }

    over "Shop_Lamps_Lights_Light9_Bulb"
    {
        over "Shop_Lamps_Lights_Light9_Bulb" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/LampBulbShaderSG>
        }
    }

    over "Shop_Lamps_Lights_Light8"
    {
        over "Shop_Lamps_Lights_Light8" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/LampShaderSG>
        }
    }

    over "Shop_Lamps_Lights_Light8_Bulb"
    {
        over "Shop_Lamps_Lights_Light8_Bulb" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/LampBulbShaderSG>
        }
    }

    over "Shop_Lamps_Lights_Light"
    {
        over "Shop_Lamps_Lights_Light" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/LampShaderSG>
        }
    }

    over "Shop_Lamps_Lights_Light_Bulb"
    {
        over "Shop_Lamps_Lights_Light_Bulb" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/LampBulbShaderSG>
        }
    }

    over "Shop_Lights_HoodLamp5_GrowLights"
    {
        over "Shop_Lights_HoodLamp5_GrowLights" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/GrowLightShaderSG>
        }
    }

    over "Shop_Lights_GrowLights_HoodLamp4"
    {
        over "Shop_Lights_GrowLights_HoodLamp4" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/GrowLightShaderSG>
        }
    }

    over "Shop_Lights_GrowLights_HoodLamp6"
    {
        over "Shop_Lights_GrowLights_HoodLamp6" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/GrowLightShader1SG>
        }
    }

    over "Shop_Lights_GrowLights_HoodLamp7"
    {
        over "Shop_Lights_GrowLights_HoodLamp7" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/GrowLightShader1SG>
        }
    }

    over "Shop_Lights_GrowLights_HoodLamp"
    {
        over "Shop_Lights_GrowLights_HoodLamp" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/GrowLightShaderSG>
        }
    }

    over "Shop_Lights_GrowLights_HoodLamp3"
    {
        over "Shop_Lights_GrowLights_HoodLamp3" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/GrowLightShaderSG>
        }
    }

    over "Shop_Lights_GrowLights_HoodLamp8"
    {
        over "Shop_Lights_GrowLights_HoodLamp8" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/GrowLightShader1SG>
        }
    }

    over "Shop_CabinetAndSink_WorkingTables_TablesAndShelves"
    {
        over "Shop_CabinetAndSink_WorkingTables_TablesAndShelves" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/SinkShaderSG>
        }
    }

    over "Shop_CabinetAndSink_WorkingTables_TablesAndShelves_Knob11"
    {
        over "Shop_CabinetAndSink_WorkingTables_TablesAndShelves_Knob11" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/KnobShaderSG>
        }
    }

    over "Shop_CabinetAndSink_WorkingTables_TablesAndShelves_Knob12"
    {
        over "Shop_CabinetAndSink_WorkingTables_TablesAndShelves_Knob12" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/KnobShaderSG>
        }
    }

    over "Shop_WorkingTables_TablesAndShelves_Table8"
    {
        over "Shop_WorkingTables_TablesAndShelves_Table8" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WorkingTableShaderSG>
        }
    }

    over "Shop_WorkingTables_TablesAndShelves_Table4"
    {
        over "Shop_WorkingTables_TablesAndShelves_Table4" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WorkingTableShader1SG>
        }
    }

    over "Shop_WorkingTables_TablesAndShelves_Table5"
    {
        over "Shop_WorkingTables_TablesAndShelves_Table5" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WorkingTableShaderSG>
        }
    }

    over "Shop_TablesAndShelves_Cabinet_DecorativeTables"
    {
        over "Shop_TablesAndShelves_Cabinet_DecorativeTables" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/CabinetShaderSG>
        }
    }

    over "Shop_TablesAndShelves_Cabinet_DecorativeTables_Knob15"
    {
        over "Shop_TablesAndShelves_Cabinet_DecorativeTables_Knob15" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/KnobShaderSG>
        }
    }

    over "Shop_TablesAndShelves_Cabinet_DecorativeTables_Knob14"
    {
        over "Shop_TablesAndShelves_Cabinet_DecorativeTables_Knob14" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/KnobShaderSG>
        }
    }

    over "Shop_TablesAndShelves_Cabinet_DecorativeTables_Knob13"
    {
        over "Shop_TablesAndShelves_Cabinet_DecorativeTables_Knob13" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/KnobShaderSG>
        }
    }

    over "Shop_TablesAndShelves_DecorativeTables_Table7"
    {
        over "Shop_TablesAndShelves_DecorativeTables_Table7" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/DecorTableShaderSG>
        }
    }

    over "Shop_TablesAndShelves_DecorativeTables_Table6"
    {
        over "Shop_TablesAndShelves_DecorativeTables_Table6" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/DecorTableShaderSG>
        }
    }

    over "Shop_TablesAndShelves_DecorativeTables_Table1"
    {
        over "Shop_TablesAndShelves_DecorativeTables_Table1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/DecorTableShaderSG>
        }
    }

    over "Shop_TablesAndShelves_DecorativeTables_Table"
    {
        over "Shop_TablesAndShelves_DecorativeTables_Table" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/DecorTableShader1SG>
        }
    }

    over "Shop_TablesAndShelves_DecorativeTables_pasted__Table"
    {
        over "Shop_TablesAndShelves_DecorativeTables_pasted__Table" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/FrontTableShaderSG>
        }
    }

    over "Shop_TablesAndShelves_Angled_Bar1_Counter"
    {
        over "Shop_TablesAndShelves_Angled_Bar1_Counter" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/CounterTableShaderSG>
        }
    }

    over "Shop_TablesAndShelves_Counter_Straight_Bar"
    {
        over "Shop_TablesAndShelves_Counter_Straight_Bar" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/CounterTableShader1SG>
        }
    }

    over "Shop_TablesAndShelves_Counter_Angled_Bar2"
    {
        over "Shop_TablesAndShelves_Counter_Angled_Bar2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/CounterTableShaderSG>
        }
    }

    over "Shop_TablesAndShelves_Counter_Straight_Bar2"
    {
        over "Shop_TablesAndShelves_Counter_Straight_Bar2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/CounterTableShader2SG>
        }
    }

    over "Shop_TablesAndShelves_Shelf2_WallShelves_Shelves"
    {
        over "Shop_TablesAndShelves_Shelf2_WallShelves_Shelves" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/ShelfShaderSG>
        }
    }

    over "Shop_TablesAndShelves_WallShelves_Shelves_Shelf4"
    {
        over "Shop_TablesAndShelves_WallShelves_Shelves_Shelf4" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/ShelfShaderSG>
        }
    }

    over "Shop_TablesAndShelves_WallShelves_Shelves_Shelf5"
    {
        over "Shop_TablesAndShelves_WallShelves_Shelves_Shelf5" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/ShelfShaderSG>
        }
    }

    over "Shop_TablesAndShelves_WallShelves_Shelves_Shelf6"
    {
        over "Shop_TablesAndShelves_WallShelves_Shelves_Shelf6" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/ShelfShaderSG>
        }
    }

    over "Shop_TablesAndShelves_Shelves_Light_Shelf1_GrowShelves"
    {
        over "Shop_TablesAndShelves_Shelves_Light_Shelf1_GrowShelves" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/GrowShelfShaderSG>
        }
    }

    over "Shop_TablesAndShelves_Shelves_GrowShelves_Light_Shelf3"
    {
        over "Shop_TablesAndShelves_Shelves_GrowShelves_Light_Shelf3" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/GrowShelfShaderSG>
        }
    }

    over "Shop_TablesAndShelves_Shelves_GrowShelves_Light_Shelf4"
    {
        over "Shop_TablesAndShelves_Shelves_GrowShelves_Light_Shelf4" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/GrowShelfShaderSG>
        }
    }

    over "Shop_SquareRug_Rugs"
    {
        over "Shop_SquareRug_Rugs" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/RugShaderSG>
        }
    }

    over "Shop_Rugs_CircleRug"
    {
        over "Shop_Rugs_CircleRug" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/RugShader1SG>
        }
    }

    over "Shop_Stool1_Stools"
    {
        over "Shop_Stool1_Stools" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/StoolShaderSG>
        }
    }

    over "Shop_Stools_Stool"
    {
        over "Shop_Stools_Stool" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/StoolShaderSG>
        }
    }

    over "Shop_Hook1_Hooks"
    {
        over "Shop_Hook1_Hooks" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/HookShaderSG>
        }
    }

    over "Shop_Hooks_Hook5"
    {
        over "Shop_Hooks_Hook5" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/HookShaderSG>
        }
    }

    over "Shop_Hooks_Hook6"
    {
        over "Shop_Hooks_Hook6" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/HookShaderSG>
        }
    }

    over "Shop_Hooks_Hook7"
    {
        over "Shop_Hooks_Hook7" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/HookShaderSG>
        }
    }

    over "Shop_Hooks_Hook8"
    {
        over "Shop_Hooks_Hook8" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/HookShaderSG>
        }
    }

    over "Shop_Bell_GameItems"
    {
        over "Shop_Bell_GameItems" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/BellShaderSG>
        }
    }

    over "Shop_GameItems_Basket"
    {
        over "Shop_GameItems_Basket" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/BasketShaderSG>
        }
    }

    over "Shop_GameItems_Computer"
    {
        over "Shop_GameItems_Computer" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/ComputerShaderSG>
        }
    }

    over "Shop_GameItems_RecordRack"
    {
        over "Shop_GameItems_RecordRack" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/RackShaderSG>
        }
    }

    over "Shop_GameItems_Record3"
    {
        over "Shop_GameItems_Record3" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/RecordShaderSG>
        }
    }

    over "Shop_GameItems_Record4"
    {
        over "Shop_GameItems_Record4" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/RecordShader1SG>
        }
    }

    over "Shop_GameItems_Record"
    {
        over "Shop_GameItems_Record" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/RecordShader2SG>
        }
    }

    over "Shop_GameItems_RecordPlayer"
    {
        over "Shop_GameItems_RecordPlayer" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PlayerShaderSG>
        }
    }

    over "Shop_GameItems_RecordPlayer_Lid"
    {
        over "Shop_GameItems_RecordPlayer_Lid" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PlayerLidShaderSG>
        }
    }

    over "Shop_GameItems_WateringCan"
    {
        over "Shop_GameItems_WateringCan" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WaterCanShaderSG>
        }
    }

    over "Shop_GameItems_WateringCan_Water"
    {
        over "Shop_GameItems_WateringCan_Water" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WaterShaderSG>
        }
    }

    over "Shop_GameItems_Shovel"
    {
        over "Shop_GameItems_Shovel" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/ShovelShaderSG>
        }
    }

    over "Shop_GameItems_Bucket4"
    {
        over "Shop_GameItems_Bucket4" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/BucketShader1SG>
        }
    }

    over "Shop_GameItems_Bucket4_Dirt"
    {
        over "Shop_GameItems_Bucket4_Dirt" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/FertShaderSG>
        }
    }

    over "Shop_GameItems_Bucket3"
    {
        over "Shop_GameItems_Bucket3" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/BucketShader1SG>
        }
    }

    over "Shop_GameItems_Bucket3_Dirt"
    {
        over "Shop_GameItems_Bucket3_Dirt" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/FertShader1SG>
        }
    }

    over "Shop_GameItems_Bucket2"
    {
        over "Shop_GameItems_Bucket2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/BucketShader1SG>
        }
    }

    over "Shop_GameItems_Bucket2_Dirt"
    {
        over "Shop_GameItems_Bucket2_Dirt" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/FertShader2SG>
        }
    }

    over "Shop_GameItems_Bucket5"
    {
        over "Shop_GameItems_Bucket5" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/BucketShader1SG>
        }
    }

    over "Shop_GameItems_Bucket5_Dirt"
    {
        over "Shop_GameItems_Bucket5_Dirt" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/FertShader3SG>
        }
    }

    over "Shop_GameItems_Bucket6"
    {
        over "Shop_GameItems_Bucket6" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/BucketShaderSG>
        }
    }

    over "Shop_GameItems_Bucket6_Dirt"
    {
        over "Shop_GameItems_Bucket6_Dirt" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/DirtShaderSG>
        }
    }

    over "Shop_GameItems_Printer"
    {
        over "Shop_GameItems_Printer" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PrinterShaderSG>
        }
    }

    over "Shop_GameItems_SeedShelf"
    {
        over "Shop_GameItems_SeedShelf" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/SeedShelfShaderSG>
        }
    }

    over "Shop_PotBase6_WorkingDecor"
    {
        over "Shop_PotBase6_WorkingDecor" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotBaseShaderSG>
        }
    }

    over "Shop_WorkingDecor_Mat"
    {
        over "Shop_WorkingDecor_Mat" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/MatShaderSG>
        }
    }

    over "Shop_WorkingDecor_Pot39"
    {
        over "Shop_WorkingDecor_Pot39" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShader1SG>
        }
    }

    over "Shop_WorkingDecor_Pot39_Soil2"
    {
        over "Shop_WorkingDecor_Pot39_Soil2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/DirtShaderSG>
        }
    }

    over "Shop_WorkingDecor_PotBase9"
    {
        over "Shop_WorkingDecor_PotBase9" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotBaseShaderSG>
        }
    }

    over "Shop_WorkingDecor_PotBase8"
    {
        over "Shop_WorkingDecor_PotBase8" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotBaseShaderSG>
        }
    }

    over "Shop_WorkingDecor_Mat1"
    {
        over "Shop_WorkingDecor_Mat1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/MatShaderSG>
        }
    }

    over "Shop_Pot36_FLoorDecor"
    {
        over "Shop_Pot36_FLoorDecor" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShaderSG>
        }
    }

    over "Shop_FLoorDecor_Pot38"
    {
        over "Shop_FLoorDecor_Pot38" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShaderSG>
        }
    }

    over "Shop_FLoorDecor_Pot35"
    {
        over "Shop_FLoorDecor_Pot35" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShaderSG>
        }
    }

    over "Shop_FLoorDecor_Pot34"
    {
        over "Shop_FLoorDecor_Pot34" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShaderSG>
        }
    }

    over "Shop_FLoorDecor_Pot37"
    {
        over "Shop_FLoorDecor_Pot37" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShaderSG>
        }
    }

    over "Shop_FLoorDecor_Pot61"
    {
        over "Shop_FLoorDecor_Pot61" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShader1SG>
        }
    }

    over "Shop_FLoorDecor_Pot62"
    {
        over "Shop_FLoorDecor_Pot62" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShader1SG>
        }
    }

    over "Shop_FLoorDecor_Pot60"
    {
        over "Shop_FLoorDecor_Pot60" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShader1SG>
        }
    }

    over "Shop_FLoorDecor_PotBase4"
    {
        over "Shop_FLoorDecor_PotBase4" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotBaseShaderSG>
        }
    }

    over "Shop_FLoorDecor_PotBase5"
    {
        over "Shop_FLoorDecor_PotBase5" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotBaseShaderSG>
        }
    }

    over "Shop_FLoorDecor_PotBase3"
    {
        over "Shop_FLoorDecor_PotBase3" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotBaseShaderSG>
        }
    }

    over "Shop_FLoorDecor_PotBase2"
    {
        over "Shop_FLoorDecor_PotBase2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotBaseShaderSG>
        }
    }

    over "Shop_FLoorDecor_PotBase7"
    {
        over "Shop_FLoorDecor_PotBase7" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotBaseShader1SG>
        }
    }

    over "Shop_FLoorDecor_PotBase"
    {
        over "Shop_FLoorDecor_PotBase" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotBaseShader1SG>
        }
    }

    over "Shop_FLoorDecor_Vase"
    {
        over "Shop_FLoorDecor_Vase" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/VaseShaderSG>
        }
    }

    over "Shop_FLoorDecor_Pot53"
    {
        over "Shop_FLoorDecor_Pot53" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShaderSG>
        }
    }

    over "Shop_FLoorDecor_PotBase21"
    {
        over "Shop_FLoorDecor_PotBase21" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotBaseShaderSG>
        }
    }

    over "Shop_FLoorDecor_Soil12"
    {
        over "Shop_FLoorDecor_Soil12" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/DirtShaderSG>
        }
    }

    over "Shop_FLoorDecor_Soil"
    {
        over "Shop_FLoorDecor_Soil" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/DirtShaderSG>
        }
    }

    over "Shop_FLoorDecor_Pot30"
    {
        over "Shop_FLoorDecor_Pot30" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShaderSG>
        }
    }

    over "Shop_FLoorDecor_PotBase12"
    {
        over "Shop_FLoorDecor_PotBase12" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotBaseShaderSG>
        }
    }

    over "Shop_FLoorDecor_WateringCan3"
    {
        over "Shop_FLoorDecor_WateringCan3" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WaterCanShaderSG>
        }
    }

    over "Shop_FLoorDecor_Pot51"
    {
        over "Shop_FLoorDecor_Pot51" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShader2SG>
        }
    }

    over "Shop_FLoorDecor_Soil10"
    {
        over "Shop_FLoorDecor_Soil10" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/DirtShaderSG>
        }
    }

    over "Shop_FLoorDecor_PotBase19"
    {
        over "Shop_FLoorDecor_PotBase19" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotBaseShader2SG>
        }
    }

    over "Shop_FLoorDecor_Soil13"
    {
        over "Shop_FLoorDecor_Soil13" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/DirtShaderSG>
        }
    }

    over "Shop_FLoorDecor_PotBase22"
    {
        over "Shop_FLoorDecor_PotBase22" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotBaseShader1SG>
        }
    }

    over "Shop_FLoorDecor_Pot54"
    {
        over "Shop_FLoorDecor_Pot54" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShader1SG>
        }
    }

    over "Shop_FLoorDecor_PotBase20"
    {
        over "Shop_FLoorDecor_PotBase20" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotBaseShader2SG>
        }
    }

    over "Shop_FLoorDecor_Soil11"
    {
        over "Shop_FLoorDecor_Soil11" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/DirtShaderSG>
        }
    }

    over "Shop_FLoorDecor_Pot52"
    {
        over "Shop_FLoorDecor_Pot52" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShader2SG>
        }
    }

    over "Shop_FLoorDecor_Pot49"
    {
        over "Shop_FLoorDecor_Pot49" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShaderSG>
        }
    }

    over "Shop_FLoorDecor_Soil9"
    {
        over "Shop_FLoorDecor_Soil9" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/DirtShaderSG>
        }
    }

    over "Shop_FLoorDecor_PotBase18"
    {
        over "Shop_FLoorDecor_PotBase18" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotBaseShaderSG>
        }
    }

    over "Shop_Vase8_TableDecor_ShelfDecor"
    {
        over "Shop_Vase8_TableDecor_ShelfDecor" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/VaseShader1SG>
        }
    }

    over "Shop_TableDecor_ShelfDecor_pasted__Soda_Can2"
    {
        over "Shop_TableDecor_ShelfDecor_pasted__Soda_Can2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/SodaShader2SG>
        }
    }

    over "Shop_TableDecor_ShelfDecor_pasted__Soda_Can2_pasted__Soda_Can_Top"
    {
        over "Shop_TableDecor_ShelfDecor_pasted__Soda_Can2_pasted__Soda_Can_Top" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/SodaTopShaderSG>
        }
    }

    over "Shop_TableDecor_ShelfDecor_pasted__pPlane4"
    {
        over "Shop_TableDecor_ShelfDecor_pasted__pPlane4" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/BottleShaderSG>
        }
    }

    over "Shop_TableDecor_ShelfDecor_PotBase11"
    {
        over "Shop_TableDecor_ShelfDecor_PotBase11" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PlaterShaderSG>
        }
    }

    over "Shop_TableDecor_ShelfDecor_Pot75"
    {
        over "Shop_TableDecor_ShelfDecor_Pot75" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/CupShaderSG>
        }
    }

    over "Shop_TableDecor_ShelfDecor_pasted__Soda_Can"
    {
        over "Shop_TableDecor_ShelfDecor_pasted__Soda_Can" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/SodaShaderSG>
        }
    }

    over "Shop_TableDecor_ShelfDecor_pasted__Soda_Can_pasted__Soda_Can_Top"
    {
        over "Shop_TableDecor_ShelfDecor_pasted__Soda_Can_pasted__Soda_Can_Top" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/SodaTopShaderSG>
        }
    }

    over "Shop_TableDecor_ShelfDecor_PotBase10"
    {
        over "Shop_TableDecor_ShelfDecor_PotBase10" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PlaterShaderSG>
        }
    }

    over "Shop_ShelfDecor_Pot59"
    {
        over "Shop_ShelfDecor_Pot59" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShaderSG>
        }
    }

    over "Shop_ShelfDecor_PotBase27"
    {
        over "Shop_ShelfDecor_PotBase27" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotBaseShaderSG>
        }
    }

    over "Shop_ShelfDecor_Pot44"
    {
        over "Shop_ShelfDecor_Pot44" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShader2SG>
        }
    }

    over "Shop_ShelfDecor_Pot43"
    {
        over "Shop_ShelfDecor_Pot43" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShader1SG>
        }
    }

    over "Shop_ShelfDecor_Pot42"
    {
        over "Shop_ShelfDecor_Pot42" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShader2SG>
        }
    }

    over "Shop_ShelfDecor_Pot58"
    {
        over "Shop_ShelfDecor_Pot58" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShader1SG>
        }
    }

    over "Shop_ShelfDecor_PotBase26"
    {
        over "Shop_ShelfDecor_PotBase26" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotBaseShader1SG>
        }
    }

    over "Shop_ShelfDecor_Soil17"
    {
        over "Shop_ShelfDecor_Soil17" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/DirtShaderSG>
        }
    }

    over "Shop_ShelfDecor_pasted__pPlane1"
    {
        over "Shop_ShelfDecor_pasted__pPlane1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/BottleShaderSG>
        }
    }

    over "Shop_ShelfDecor_Bucket1"
    {
        over "Shop_ShelfDecor_Bucket1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/BasketShaderSG>
        }
    }

    over "Shop_ShelfDecor_pasted__HangingNet_Geo"
    {
        over "Shop_ShelfDecor_pasted__HangingNet_Geo" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/NetShaderSG>
        }
    }

    over "Shop_ShelfDecor_Pot57"
    {
        over "Shop_ShelfDecor_Pot57" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShaderSG>
        }
    }

    over "Shop_ShelfDecor_Soil16"
    {
        over "Shop_ShelfDecor_Soil16" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/DirtShaderSG>
        }
    }

    over "Shop_ShelfDecor_PotBase25"
    {
        over "Shop_ShelfDecor_PotBase25" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotBaseShaderSG>
        }
    }

    over "Shop_ShelfDecor_WateringCan4"
    {
        over "Shop_ShelfDecor_WateringCan4" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WaterCanShaderSG>
        }
    }

    over "Shop_ShelfDecor_Vase2"
    {
        over "Shop_ShelfDecor_Vase2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/VaseShader1SG>
        }
    }

    over "Shop_ShelfDecor_Soil14"
    {
        over "Shop_ShelfDecor_Soil14" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/DirtShaderSG>
        }
    }

    over "Shop_ShelfDecor_Pot55"
    {
        over "Shop_ShelfDecor_Pot55" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShader1SG>
        }
    }

    over "Shop_ShelfDecor_PotBase23"
    {
        over "Shop_ShelfDecor_PotBase23" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotBaseShader1SG>
        }
    }

    over "Shop_ShelfDecor_Soil15"
    {
        over "Shop_ShelfDecor_Soil15" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/DirtShaderSG>
        }
    }

    over "Shop_ShelfDecor_Pot56"
    {
        over "Shop_ShelfDecor_Pot56" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShader2SG>
        }
    }

    over "Shop_ShelfDecor_PotBase24"
    {
        over "Shop_ShelfDecor_PotBase24" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotBaseShader2SG>
        }
    }

    over "Shop_ShelfDecor_Bucket7"
    {
        over "Shop_ShelfDecor_Bucket7" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/BucketShader1SG>
        }
    }

    over "Shop_ShelfDecor_Bucket8"
    {
        over "Shop_ShelfDecor_Bucket8" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/BucketShaderSG>
        }
    }

    over "Shop_ShelfDecor_pasted__Soda_Can3"
    {
        over "Shop_ShelfDecor_pasted__Soda_Can3" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/SodaShader1SG>
        }
    }

    over "Shop_ShelfDecor_pasted__Soda_Can3_pasted__Soda_Can_Top"
    {
        over "Shop_ShelfDecor_pasted__Soda_Can3_pasted__Soda_Can_Top" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/SodaTopShaderSG>
        }
    }

    over "Shop_ShelfDecor_pasted__pPlane2"
    {
        over "Shop_ShelfDecor_pasted__pPlane2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/BottleShaderSG>
        }
    }

    over "Shop_ShelfDecor_Pot71"
    {
        over "Shop_ShelfDecor_Pot71" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShader2SG>
        }
    }

    over "Shop_ShelfDecor_Pot69"
    {
        over "Shop_ShelfDecor_Pot69" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShaderSG>
        }
    }

    over "Shop_ShelfDecor_Vase6"
    {
        over "Shop_ShelfDecor_Vase6" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/VaseShaderSG>
        }
    }

    over "Shop_ShelfDecor_Soil20"
    {
        over "Shop_ShelfDecor_Soil20" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/DirtShaderSG>
        }
    }

    over "Shop_ShelfDecor_PotBase30"
    {
        over "Shop_ShelfDecor_PotBase30" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotBaseShaderSG>
        }
    }

    over "Shop_ShelfDecor_WateringCan5"
    {
        over "Shop_ShelfDecor_WateringCan5" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WaterCanShaderSG>
        }
    }

    over "Shop_ShelfDecor_Pot66"
    {
        over "Shop_ShelfDecor_Pot66" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShader2SG>
        }
    }

    over "Shop_ShelfDecor_Pot65"
    {
        over "Shop_ShelfDecor_Pot65" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShader1SG>
        }
    }

    over "Shop_ShelfDecor_Soil19"
    {
        over "Shop_ShelfDecor_Soil19" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/DirtShaderSG>
        }
    }

    over "Shop_ShelfDecor_Pot64"
    {
        over "Shop_ShelfDecor_Pot64" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShader2SG>
        }
    }

    over "Shop_ShelfDecor_PotBase29"
    {
        over "Shop_ShelfDecor_PotBase29" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotBaseShader2SG>
        }
    }

    over "Shop_ShelfDecor_pasted__Soda_Can1"
    {
        over "Shop_ShelfDecor_pasted__Soda_Can1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/SodaShader1SG>
        }
    }

    over "Shop_ShelfDecor_pasted__Soda_Can1_pasted__Soda_Can_Top"
    {
        over "Shop_ShelfDecor_pasted__Soda_Can1_pasted__Soda_Can_Top" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/SodaTopShaderSG>
        }
    }

    over "Shop_ShelfDecor_Soil18"
    {
        over "Shop_ShelfDecor_Soil18" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/DirtShaderSG>
        }
    }

    over "Shop_ShelfDecor_Pot63"
    {
        over "Shop_ShelfDecor_Pot63" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShader2SG>
        }
    }

    over "Shop_ShelfDecor_PotBase28"
    {
        over "Shop_ShelfDecor_PotBase28" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotBaseShader2SG>
        }
    }

    over "Shop_ShelfDecor_Vase5"
    {
        over "Shop_ShelfDecor_Vase5" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/VaseShader1SG>
        }
    }

    over "Shop_ShelfDecor_Pot68"
    {
        over "Shop_ShelfDecor_Pot68" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShader1SG>
        }
    }

    over "Shop_ShelfDecor_Pot67"
    {
        over "Shop_ShelfDecor_Pot67" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShader2SG>
        }
    }

    over "Shop_ShelfDecor_Soil22"
    {
        over "Shop_ShelfDecor_Soil22" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/DirtShaderSG>
        }
    }

    over "Shop_ShelfDecor_Pot72"
    {
        over "Shop_ShelfDecor_Pot72" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShaderSG>
        }
    }

    over "Shop_ShelfDecor_PotBase32"
    {
        over "Shop_ShelfDecor_PotBase32" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotBaseShaderSG>
        }
    }

    over "Shop_ShelfDecor_pasted__pPlane3"
    {
        over "Shop_ShelfDecor_pasted__pPlane3" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/BottleShaderSG>
        }
    }

    over "Shop_ShelfDecor_pasted__Soda_Can4"
    {
        over "Shop_ShelfDecor_pasted__Soda_Can4" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/SodaShaderSG>
        }
    }

    over "Shop_ShelfDecor_pasted__Soda_Can4_pasted__Soda_Can_Top"
    {
        over "Shop_ShelfDecor_pasted__Soda_Can4_pasted__Soda_Can_Top" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/SodaTopShaderSG>
        }
    }

    over "Shop_ShelfDecor_Soil8"
    {
        over "Shop_ShelfDecor_Soil8" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/DirtShaderSG>
        }
    }

    over "Shop_ShelfDecor_Pot48"
    {
        over "Shop_ShelfDecor_Pot48" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShader1SG>
        }
    }

    over "Shop_ShelfDecor_PotBase17"
    {
        over "Shop_ShelfDecor_PotBase17" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotBaseShader1SG>
        }
    }

    over "Shop_ShelfDecor_Vase7"
    {
        over "Shop_ShelfDecor_Vase7" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/VaseShaderSG>
        }
    }

    over "Shop_ShelfDecor_WateringCan7"
    {
        over "Shop_ShelfDecor_WateringCan7" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WaterCanShaderSG>
        }
    }

    over "Shop_ShelfDecor_Soil7"
    {
        over "Shop_ShelfDecor_Soil7" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/DirtShaderSG>
        }
    }

    over "Shop_ShelfDecor_Pot47"
    {
        over "Shop_ShelfDecor_Pot47" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShaderSG>
        }
    }

    over "Shop_ShelfDecor_PotBase16"
    {
        over "Shop_ShelfDecor_PotBase16" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotBaseShaderSG>
        }
    }

    over "Shop_ShelfDecor_Vase3"
    {
        over "Shop_ShelfDecor_Vase3" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/VaseShader1SG>
        }
    }

    over "Shop_ShelfDecor_Soil24"
    {
        over "Shop_ShelfDecor_Soil24" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/DirtShaderSG>
        }
    }

    over "Shop_ShelfDecor_Pot74"
    {
        over "Shop_ShelfDecor_Pot74" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShader1SG>
        }
    }

    over "Shop_ShelfDecor_PotBase34"
    {
        over "Shop_ShelfDecor_PotBase34" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotBaseShader1SG>
        }
    }

    over "Shop_ShelfDecor_Soil23"
    {
        over "Shop_ShelfDecor_Soil23" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/DirtShaderSG>
        }
    }

    over "Shop_ShelfDecor_Pot73"
    {
        over "Shop_ShelfDecor_Pot73" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShaderSG>
        }
    }

    over "Shop_ShelfDecor_PotBase33"
    {
        over "Shop_ShelfDecor_PotBase33" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotBaseShaderSG>
        }
    }

    over "Shop_ShelfDecor_Soil6"
    {
        over "Shop_ShelfDecor_Soil6" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/DirtShaderSG>
        }
    }

    over "Shop_ShelfDecor_Pot46"
    {
        over "Shop_ShelfDecor_Pot46" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShader2SG>
        }
    }

    over "Shop_ShelfDecor_PotBase15"
    {
        over "Shop_ShelfDecor_PotBase15" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotBaseShader2SG>
        }
    }

    over "Shop_ShelfDecor_Soil5"
    {
        over "Shop_ShelfDecor_Soil5" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/DirtShaderSG>
        }
    }

    over "Shop_ShelfDecor_Pot45"
    {
        over "Shop_ShelfDecor_Pot45" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShaderSG>
        }
    }

    over "Shop_ShelfDecor_PotBase14"
    {
        over "Shop_ShelfDecor_PotBase14" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotBaseShaderSG>
        }
    }

    over "Shop_ShelfDecor_Vase4"
    {
        over "Shop_ShelfDecor_Vase4" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/VaseShaderSG>
        }
    }

    over "Shop_ShelfDecor_WateringCan6"
    {
        over "Shop_ShelfDecor_WateringCan6" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/WaterCanShaderSG>
        }
    }

    over "Shop_ShelfDecor_PotBase31"
    {
        over "Shop_ShelfDecor_PotBase31" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotBaseShader1SG>
        }
    }

    over "Shop_ShelfDecor_Pot70"
    {
        over "Shop_ShelfDecor_Pot70" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/PotShader1SG>
        }
    }

    over "Shop_ShelfDecor_Soil21"
    {
        over "Shop_ShelfDecor_Soil21" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/DirtShaderSG>
        }
    }

    over "Shop_ShelfDecor_pasted__Soda_Can5"
    {
        over "Shop_ShelfDecor_pasted__Soda_Can5" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/SodaShader1SG>
        }
    }

    over "Shop_ShelfDecor_pasted__Soda_Can5_pasted__Soda_Can_Top"
    {
        over "Shop_ShelfDecor_pasted__Soda_Can5_pasted__Soda_Can_Top" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </PlantShopFix_obj/material/SodaTopShaderSG>
        }
    }
}

